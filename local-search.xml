<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基金讲解</title>
    <link href="/%E5%9F%BA%E9%87%91/"/>
    <url>/%E5%9F%BA%E9%87%91/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>基金是一种集合投资方式，由基金管理人将众多投资者的资金集中起来，按照投资目标和策略进行组合投资，旨在分散风险、实现资产增值。投资者通过购买基金份额成为基金的受益人，分享投资收益并承担相应风险。</p>          </div><h2 id="roKXg">基金分类</h2><ol type="1"><li><p>按投资对象分类</p><ol type="a"><li><p><strong>股票型基金</strong>：主要投资于股票市场，股票投资比例通常超过80%。这类基金追求资本增值，风险和收益相对较高，适合长期投资。</p></li><li><p><strong>债券型基金</strong>：主要投资于债券，包括国债、企业债等。收益相对稳定，风险较低，适合风险偏好较低的投资者。</p></li><li><p><strong>混合型基金</strong>：同时投资于股票和债券，根据资产配置比例的不同，分为偏股混合型、偏债混合型和平衡混合型。这种基金兼顾收益与风险，适合不同市场环境。</p></li><li><p><strong>货币市场基金</strong>：主要投资于短期且保本货币工具，如国债、央行票据、银行定期存单等。风险极低，收益较为稳定，流动性强，适合短期闲置资金存放。</p></li><li><p><strong>QDII基金</strong>：投资于海外市场，包括股票、债券、房地产等。投资者可以通过这类基金分散国内市场的风险，获取全球资产配置的机会。</p></li><li><p><strong>商品基金</strong>：投资于大宗商品，如黄金、石油等。这类基金通常用于对冲通胀风险或参与大宗商品市场的投资机会。</p></li></ol></li><li><p>按投资目标分类</p><ol type="1"><li><p><strong>增长型基金</strong>：以追求资本增值为主要目标，投资于高成长潜力的股票，风险和收益较高。</p></li><li><p><strong>收入型基金</strong>：以获取稳定的现金流为目标，主要投资于债券、优先股等，适合退休人群或风险偏好较低的投资者。</p></li><li><p><strong>平衡型基金</strong>：兼顾增长和收入，投资于股票和债券，追求资产的稳健增值。</p></li></ol></li><li><p>按投资策略分类</p><ol type="1"><li><p><strong>主动管理型基金</strong>：由基金经理根据市场情况主动选择投资标的，追求超越市场平均水平的收益。</p></li><li><p><strong>被动管理型基金（指数基金）</strong>：按指数的编制规则买入/调仓相同比例的股票。</p><ol type="1"><li><p>宽基(股票)指数</p></li><li><p>行业指数</p></li></ol></li><li><p><strong>量化基金</strong>：通过量化模型和算法进行投资决策，追求更高的投资效率和风险控制。</p></li></ol></li><li><p>按运作方式分类</p><ol type="1"><li><p><strong>开放式基金</strong>：投资者可以在任何交易日申购或赎回基金份额，规模不固定，流动性强。</p></li><li><p><strong>封闭式基金</strong>：基金份额固定，投资者在封闭期内无法赎回，但可以在二级市场交易。</p></li><li><p><strong>定期开放式基金</strong>：在特定时间开放申购和赎回，兼具开放式和封闭式的优点，适合长期投资。</p></li></ol></li><li><p>按特殊主题分类</p><ol type="1"><li><p><strong>行业基金</strong>：专注于某一特定行业，如科技、医疗、消费等，适合看好特定行业发展的投资者。</p></li><li><p><strong>主题基金</strong>：围绕某一主题投资，如新能源、人工智能、养老等，具有较高的投资针对性。</p></li><li><p><strong>社会责任基金</strong>：投资于符合环保、社会公正等可持续发展标准的公司，追求经济和社会效益的双重目标。</p></li></ol></li></ol><h2 id="MHks6">基金交易规则</h2><ul><li>场内渠道：与股市交易规则一致</li><li>场外渠道：</li></ul><table style="width:100%;"><thead><tr class="header"><th style="text-align: center;">渠道</th><th>交易时间</th><th>交易方式</th><th>交易制度</th><th>交易数量</th><th>价格限制</th><th>手续费</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">场内渠道</td><td><font style="color:rgb(6, 6, 7);">周一至周五上午 9:30-11:30，下午13:00-15:00，法定节假日不交易</font></td><td><font style="color:rgb(6, 6, 7);">类似于股票交易，通过证券交易所的交易系统进行，支持买入、卖出、申购、赎回等操</font></td><td>1. <font style="color:rgb(6, 6, 7);">一般实行 T+1交易，即当天买入的基金份额，第二个交易日才能卖出</font><br/>2.<font style="color:rgb(6, 6, 7);">部分特殊品种（如跨境 ETF、债券ETF、货币 ETF、黄金 ETF 等）支持 T+0交易，即当天买入可当天卖出</font></td><td><font style="color:rgb(6, 6, 7);">每一交易单位为 100份及其整数倍</font></td><td><font style="color:rgb(6, 6, 7);">场内基金交易实行价格涨跌幅限制，涨跌幅比例为10%</font></td><td><font style="color:rgb(6, 6, 7);">主要包括佣金和运作费。佣金通常不超过成交金额的千分之三，单笔最低5元（部分证券公司除外）。运作费从基金资产中计提，不直接向投资者收取</font></td></tr><tr class="even"><td style="text-align: center;">场外渠道</td><td>1. 1<font style="color:rgb(6, 6, 7);">5:00之前买入或卖出，以当天收盘后的基金净值确认份额；</font><br/>2.<font style="color:rgb(6, 6, 7);">15:00之后买入或卖出，以下一个交易日（T+1）的净值确认份额</font></td><td><font style="color:rgb(6, 6, 7);">通过基金公司直销、银行、证券公司或第三方销售平台进行申购、赎回</font></td><td><font style="color:rgb(6, 6, 7);">实行 T+1交易，即当天买入的基金份额，第二个交易日才能卖出</font></td><td>/</td><td>/</td><td><font style="color:rgb(6, 6, 7);">主要包括申购费（认购费）、赎回费和运作费。不同基金类型收费不同，例如：</font><br/>1.<font style="color:rgb(6, 6, 7);">A类基金收取申购费和赎回费；</font><br/>2.<font style="color:rgb(6, 6, 7);">C类基金收取赎回费和销售服务费。</font><br/><font style="color:rgb(6, 6, 7);">运作费从基金资产中计提，不直接向投资者收取</font></td></tr></tbody></table><h2 id="mhBBw">基金需关注名词</h2><ul><li>前端收费：购买基金时就支付申购费</li><li>后端收费：卖出基金时才支付申购费，买入时不支付</li><li>赎回费率：卖出的费率&lt;按照买入时间计算。持有时间越长，费率越低&gt;</li><li>管理费、托管费&amp;销售服务费</li><li>买入单位净值</li><li>卖出单位净值</li></ul>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-0ce4aab7" role="button" aria-expanded="false" aria-controls="collapse-0ce4aab7">        <div class="fold-arrow">▶</div>对净值&份额的理解      </div>      <div class="fold-collapse collapse" id="collapse-0ce4aab7">        <div class="fold-content">          <p><strong><span class="ne-text">e.g.:一只鸡蛋</span></strong><strong><span class="ne-text"style="color: #DF2A3F">5毛钱&lt;买入时净值&gt;</span></strong><strong><span class="ne-text">，花5 元买了</span></strong><strong><span class="ne-text"style="color: #DF2A3F">10只&lt;买入份额&gt;</span></strong><strong><spanclass="ne-text">；过了一个月，一只鸡蛋</span></strong><strong><spanclass="ne-text" style="color: #DF2A3F"> 1元钱&lt;卖出时净值&gt;</span></strong><strong><spanclass="ne-text">，</span></strong><strong><span class="ne-text"style="color: #DF2A3F">全部卖出&lt;卖出份额&gt;</span></strong><strong><spanclass="ne-text">，获得 10 元；</span></strong><strong><spanclass="ne-text" style="color: #DF2A3F">净赚 10-5=5元&lt;实际收益&gt;</span></strong></p><p><span class="math display">\[买入总金额 = 期望买入的份额 \times 买入时单位净值\]</span></p><p><span class="math inline">\(卖出总金额 = 期望卖出的份额 \times卖出时单位净值\)</span></p><p><span class="math inline">\(实际收益 = 卖出总金额 -买入总金额\)</span></p>        </div>      </div>    </div><h2 id="QVSRI">如何选择一只基金？</h2><ol type="1"><li>历史业绩<ol type="1"><li>纵向对比：同类基金同一时间段的业绩排名<font style="color:rgba(176,172,135,1);">&lt;至少看3~5 年&gt;</font></li><li>横向对比：同期大盘涨跌参考</li></ol></li></ol><div class="note note-info">            <p>先结合自己的需求 &amp; 接受的风险偏好选择购买什么类型的基金，再使用<strong>4<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="4：选择两年、三年、五年 &amp; 今年以来业绩排名，在同类基金中排名前 ¼ 的基金">[1]</span></a></sup>4<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="4：选择一年以来业绩排名，在同类基金中排名前 ¼ 的基金">[2]</span></a></sup>3<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="3：选择近 6 个月以来业绩排名，在同类基金中排名前 ⅓ 的基金">[3]</span></a></sup>3<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="3：选择近 3 个月以来业绩排名，在同类基金中排名前 ⅓ 的基金">[4]</span></a></sup>法则</strong>去选购基金。需要用到 <ahref="https://www.howbuy.com/fundtool/filter.htm">好买基金网</a> //链接不显示</p>          </div><ol start="2" type="1"><li>基金评级<ol type="1"><li><ahref="https://www.morningstar.cn/#/"><font style="color:#000000;">晨星网</font></a><font style="color:#000000;"></font> 4-5 星</li><li><ahref="https://fund.eastmoney.com/data/fundrating.html"><font style="color:#000000;">天天基金网- 基金评级</font></a><font style="color:#000000;"> </font>至少 2家机构评 5 星</li></ol></li><li>基金经理<ol type="1"><li>从业年限：从业时间越长，风险评估越好，经验越丰富</li><li>历史业绩：管理的基金，在他从业期间表现如何</li><li>管理的基金数：选择管理基金数 ≤ 6 只的</li></ol></li><li>基金公司<ol type="1"><li>易方达</li><li>华夏基金</li><li>南方基金</li><li>中银基金</li><li>招商基金</li><li>博时基金</li><li>嘉实基金</li></ol></li><li>风险评估<ol type="1"><li>夏普比率：越搞越好</li><li>标准差：越低越好</li></ol></li></ol><h2id="该拿多少钱出来投基金投多少只合适">该拿多少钱出来投基金？投多少只合适？</h2><h3 id="标准普尔家庭资产四象限">标准普尔家庭资产四象限</h3><div class="note note-success">            <p>标准普尔家庭资产四象限是一种被广泛认可的家庭资产配置方法，其核心是将家庭资产分为四个账户，每个账户有不同的功能和投资工具。</p>          </div><table><thead><tr class="header"><th style="text-align: center;">账户名</th><th style="text-align: center;">用途</th><th style="text-align: center;">建议占比</th><th style="text-align: center;">投资工具</th><th style="text-align: center;">要点</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">日常开销账户 - 要花的钱</td><td style="text-align: center;">用于家庭 3-6个月的生活费用，满足日常开销，如衣食住行、旅游等</td><td style="text-align: center;">10%</td><tdstyle="text-align: center;">活期存款、货币基金等，要求高流动性和低风险</td><td style="text-align: center;">避免过度消费，控制该账户的占比</td></tr><tr class="even"><td style="text-align: center;">杠杆账户 - 保命的钱</td><tdstyle="text-align: center;">用于应对突发大额开支，如重大疾病或意外事故，保障家庭财务安全</td><td style="text-align: center;">20%</td><tdstyle="text-align: center;">主要为保障型保险，如重疾险、意外险，通过小投入换取大保障</td><tdstyle="text-align: center;">专款专用，确保在关键时刻能够提供足够的资金支持</td></tr><tr class="odd"><td style="text-align: center;">投资账户 - 生钱的钱</td><tdstyle="text-align: center;">用于投资，追求高收益，为家庭创造财富</td><td style="text-align: center;">30%</td><tdstyle="text-align: center;">股票、基金、房产、股权等高风险高收益的资产</td><tdstyle="text-align: center;">投资需谨慎，避免因单一投资失败对家庭财务造成重大影响</td></tr><tr class="even"><td style="text-align: center;">长期理财账户 - 保本升值的钱</td><tdstyle="text-align: center;">用于长期目标，如子女教育、养老等，确保资金的保值增值</td><td style="text-align: center;">40%</td><tdstyle="text-align: center;">国债、银行定期存款、年金保险、稳健型基金等</td><tdstyle="text-align: center;">注重安全性和稳定性，避免短期波动影响长期目标</td></tr></tbody></table><h3 id="基金投资策略">基金投资策略</h3><div class="note note-pramiry">            <p>新手建议手持4-5只基金即可。</p>          </div><ol type="1"><li><p>长线投资：可忽略短期市场波动，享受经济增长所带来的收益</p></li><li><p>基金经理</p><ol type="a"><li>选择不同类型的基金</li><li>分散不同的基金公司 &amp; 基金经理</li><li>国内基金与海外基金分散</li></ol></li><li><p>分段投资(定投)</p></li></ol><h2 id="section"></h2><h2 id="section-1"></h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>4：选择两年、三年、五年&amp; 今年以来业绩排名，在同类基金中排名前 ¼ 的基金<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2"class="footnote-text"><span>4：选择一年以来业绩排名，在同类基金中排名前¼ 的基金 <a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>3：选择近 6个月以来业绩排名，在同类基金中排名前 ⅓ 的基金<a href="#fnref:3" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>3：选择近 3个月以来业绩排名，在同类基金中排名前 ⅓ 的基金<a href="#fnref:4" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>股票</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基金</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>股票之K线讲解</title>
    <link href="/k%E7%BA%BF%E8%AE%B2%E8%A7%A3/"/>
    <url>/k%E7%BA%BF%E8%AE%B2%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="k-线图">K 线图</h1><p>K 线图，又称蜡烛图，起源于 18世纪的日本，最初由日本米商用来记录米价的波动。这种图表形式由本间宗久（MunehisaHomma）发展完善，他通过对价格走势的观察，创造了 K线图的基本形态，并在其著作中详细阐述了其使用方法。K 线图在 20 世纪 80年代通过金融市场的交流逐渐传播到西方国家，成为全球投资者和交易者分析市场的重要工具。</p><h2 id="k-线图组成">k 线图组成</h2><p>每根 K线是由<code>开盘价、收盘价、最高价和最低价</code>四个价格组成,通过实体部分和影线直观地展示了价格的波动情况。如今，K线图在股票、期货、外汇等交易领域广泛应用，帮助投资者获取市场趋势和买卖信号。</p><div class="note note-success">            <p><strong>上影线</strong>代表空头<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="指的是正在买进/持有股票的投资">[1]</span></a></sup>是否在博弈中占据优势,而<strong>下影线</strong>代表多头<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="指的是正在卖出/不持有股票的投资">[2]</span></a></sup>是否在博弈中占据优势。<code>上/下影线哪边更长代表哪方更占据优势；而两边一样长则代表双方势均力敌！</code></p>          </div><ul><li><p>收盘价 &gt; 开盘价</p><p><img src="./yangxian.png" alt="阳线"></p></li><li><p>收盘价 &lt; 开盘价</p></li></ul><p><img src="./yinxian.png" alt="阴线"></p><h1 id="k-线信号总结">K 线信号总结</h1><p>K 线图是股票市场分析中常用的工具，通过 K线的形态和组合，投资者可以获取市场趋势和买卖信号。以下是一些常见的 K线信号：</p><h2 id="单根-k-线信号">单根 K 线信号</h2><ol type="1"><li><p><strong>光头阳线（红）与光头阴线（绿）</strong></p><ul><li><strong>特征</strong>：没有上影线，收盘价或开盘价与最高价相等。</li><li><strong>信号</strong>：光头阳线表示强烈的上升动力，光头阴线表示强烈的下跌动力。<imgsrc="https://static.aicoinstorge.com/article/20220304/164636798851758.jpg"alt="光头阳线与光头阴线" /></li></ul></li><li><p><strong>光脚阳线（白）与光脚阴线（黑）</strong></p><ul><li><strong>特征</strong>：没有下影线，收盘价或开盘价与最低价相等。</li><li><strong>信号</strong>：光脚阳线表示强烈的上升动力，光脚阴线表示强烈的下跌动力。<imgsrc="https://static.aicoinstorge.com/article/20220304/164636798827971.jpg"alt="光脚阳线与光脚阴线" /></li></ul></li><li><p><strong>光头光脚的阳线与阴线</strong></p><ul><li><strong>特征</strong>：既没有上影线又没有下影线，开盘价和收盘价分别与最高价和最低价中的一个相等。</li><li><strong>信号</strong>：光头光脚阳线表示极强的上升动力，光头光脚阴线表示极强的下跌动力。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798829949.jpg"alt="光头光脚的阳线与阴线" /><figcaption aria-hidden="true">光头光脚的阳线与阴线</figcaption></figure></li><li><p><strong>T 字型和倒 T 字型</strong></p><ul><li><strong>特征</strong>：没有实体，没有上影线或下影线，形状像英文字母T。</li><li><strong>信号</strong>：T 字型表示市场犹豫不决，倒 T字型表示市场反转信号。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798818749.jpg"alt="T字型和倒T字型" /><figcaption aria-hidden="true">T字型和倒T字型</figcaption></figure></li><li><p><strong>十字星</strong></p><ul><li><strong>特征</strong>：收盘价与开盘价相同，没有实体。</li><li><strong>信号</strong>：十字星表示市场犹豫不决，可能预示着趋势的反转。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798849421.jpg"alt="十字星" /><figcaption aria-hidden="true">十字星</figcaption></figure></li><li><p><strong>一字型</strong></p><ul><li><strong>特征</strong>：四个价格（开盘价、收盘价、最高价、最低价）都相同。</li><li><strong>信号</strong>：一般在平台维护时出现，表示市场无交易。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798849525.jpg"alt="一字型" /><figcaption aria-hidden="true">一字型</figcaption></figure></li></ol><h2 id="多根-k-线组合信号">多根 K 线组合信号</h2><ol type="1"><li><p><strong>乌云盖顶</strong></p><ul><li><strong>特征</strong>：在涨势中，一根长阳线后跟一根长阴线，阴线的开盘价高于阳线的收盘价。</li><li><strong>信号</strong>：股价可能升势已尽，投资者应尽早离场。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798851758.jpg"alt="乌云盖顶" /><figcaption aria-hidden="true">乌云盖顶</figcaption></figure></li><li><p><strong>曙光初现</strong></p><ul><li><strong>特征</strong>：在跌势中，一根长阴线后跟一根长阳线，阳线的开盘价低于阴线的收盘价。</li><li><strong>信号</strong>：股价可能见底回升，投资者应不失时机地逢低建仓。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798827971.jpg"alt="曙光初现" /><figcaption aria-hidden="true">曙光初现</figcaption></figure></li><li><p><strong>双飞燕</strong></p><ul><li><strong>特征</strong>：在底部，两根小阳线后跟一根大阳线，大阳线的开盘价低于前两根小阳线的收盘价。</li><li><strong>信号</strong>：股价可能见底回升，投资者可以考虑建仓。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798829949.jpg"alt="双飞燕" /><figcaption aria-hidden="true">双飞燕</figcaption></figure></li><li><p><strong>双重顶（M 头）</strong></p><ul><li><strong>特征</strong>：在顶部，股价两次达到相同高点后回落。</li><li><strong>信号</strong>：股价可能见顶回落，投资者应考虑减仓或离场。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798818749.jpg"alt="双重顶" /><figcaption aria-hidden="true">双重顶</figcaption></figure></li><li><p><strong>双重底（W 底）</strong></p><ul><li><strong>特征</strong>：在底部，股价两次达到相同低点后回升。</li><li><strong>信号</strong>：股价可能见底回升，投资者可以考虑建仓。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798849421.jpg"alt="双重底" /><figcaption aria-hidden="true">双重底</figcaption></figure></li><li><p><strong>头肩顶</strong></p><ul><li><strong>特征</strong>：在顶部，股价形成一个左肩、一个头部和一个右肩，头部的高点高于肩部。</li><li><strong>信号</strong>：股价可能见顶回落，投资者应考虑减仓或离场。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798849525.jpg"alt="头肩顶" /><figcaption aria-hidden="true">头肩顶</figcaption></figure></li><li><p><strong>头肩底</strong></p><ul><li><strong>特征</strong>：在底部，股价形成一个左肩、一个头部和一个右肩，头部的低点低于肩部。</li><li><strong>信号</strong>：股价可能见底回升，投资者可以考虑建仓。</li></ul><figure><imgsrc="https://static.aicoinstorge.com/article/20220304/164636798851758.jpg"alt="头肩底" /><figcaption aria-hidden="true">头肩底</figcaption></figure></li></ol><!-- ## 其他常见 K 线组合1. **见底形态和上升形态的 K 线、K 线组合** (图 1 - 图 27)2. **见顶形态和下跌形态的 K 线、K 线组合** (图 28 - 图 58)3. **既是上升形态、又是下跌形态的 K 线** (图 58 - 图 75) --><p>这些 K线信号和组合形态为投资者提供了丰富的市场信息，帮助他们更好地理解市场趋势和做出买卖决策。然而，K线信号只是市场分析的一部分，投资者应结合其他技术指标和基本面分析，综合判断市场走势。</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1"class="footnote-text"><span>指的是正在买进/持有股票的投资<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2"class="footnote-text"><span>指的是正在卖出/不持有股票的投资<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>股票</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>股票之量比</title>
    <link href="/%E9%87%8F%E6%AF%94/"/>
    <url>/%E9%87%8F%E6%AF%94/</url>
    
    <content type="html"><![CDATA[<h1 id="定义">定义</h1><p>是衡量相对成交量的指标，是指股市开市后平均每分钟的成交量与过去 5个交易日平均每分钟成交量之比。是股票市场技术分析<code>最常见</code>的参考指标之一。</p><h1 id="计算公式">计算公式</h1><p><span class="math display">\[  量比 =\frac{\frac  {现成交总手数}{现累计开市时间&lt;分钟&gt;}}{过去5日平均每分钟成交量}\]</span></p><h1 id="量比的优点">量比的优点</h1><ol type="1"><li><p>分析成交量：它将某只股票在某个时间点上的成交量与一段时间的成交量平均值进行比较，排除了因股本不同造成的不可比的情况，曰正发现成交量异动的重要指标</p></li><li><p>反映盘口成交力度：量比值越大，表明盘口成交越趋于活跃</p></li><li><p>反映主力行为：量比值越大，表明该股当日流入资金越多，市场活跃度越高</p></li></ol><h1 id="量比的局限性">量比的局限性</h1><ul><li>需根据大盘情况选择量比参数：大盘处于活跃的情况下，适宜用较短期的时间参数（过去5日量比平均值）；大盘处于熊市/缩量调整阶断，适宜用稍长的时间参数（过去10日量比平均值）</li></ul><ol start="2" type="1"><li>数值单一：由于数值单一，投资者在运用时会发现其有先天的不足。如果把当日每分钟的量比数值放在同一坐标系内并连线，就形成了更加直观、便于操作的量比曲线</li></ol><h1 id="量比的实战运用">量比的实战运用</h1><p><code>量比不是越大越好</code>，因为在跌的时候量比也是放大的。一般都在0.6～0.7附近；正常情况下，量比控制在1.5-2.3之间，这个区间认为很多人在买。相同卖的时候，量比也是放的非常大，量能急剧增大。所以，在买卖操作前，需看涨的时候量比是向上还是向下</p><ol type="1"><li><p>熊市中，<code>量比超过0.8</code>:有向上攻击的倾向<code class="code_info">(区间控制在0.8～2之间)</code></p></li><li><p>牛市中，<code>量比超过1.5</code>:有向上攻击的倾向</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>股票</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>股票之分时图</title>
    <link href="/%E5%88%86%E6%97%B6%E5%9B%BE/"/>
    <url>/%E5%88%86%E6%97%B6%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>股票之集合竞价</title>
    <link href="/%E9%9B%86%E5%90%88%E7%AB%9E%E4%BB%B7/"/>
    <url>/%E9%9B%86%E5%90%88%E7%AB%9E%E4%BB%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="定义">定义</h1><p>集合竞价：是指对一段时间内接收的买卖申报一次性集中撮合的竞价方式。</p><h1 id="原则">原则</h1><ol type="1"><li>在有效价格范围内选取成交量最大的价位</li><li>高于成交价格的买进申报与低于成交价格的卖出申报全部成功</li><li>与成交价格相同的买方／卖方至少一方全部成交</li></ol><h1 id="集合竞价时间">集合竞价时间</h1><ul><li><p>9:15～9:20交易主机可接收买卖申报，也可以接收撤单申报，但不对买卖/撤销申报做处理</p></li><li><p>9:20～9:25开盘集合竞价阶段，沪市<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="沪市：收盘价是通过最后一分钟连续竞价来确认的">[1]</span></a></sup>交易主机不接受撤单申报</p></li><li><p>9:20～9:25 &amp; 14:57～15:00深交所<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="深交所：收盘价是通过最后三分钟集合竞价来确认的">[2]</span></a></sup>交易主机不接受参与竞价交易的撤销申报</p></li></ul><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1"class="footnote-text"><span>沪市：收盘价是通过最后一分钟连续竞价来确认的<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2"class="footnote-text"><span>深交所：收盘价是通过最后三分钟集合竞价来确认的<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>股票</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>股票之换手率</title>
    <link href="/%E6%8D%A2%E6%89%8B%E7%8E%87/"/>
    <url>/%E6%8D%A2%E6%89%8B%E7%8E%87/</url>
    
    <content type="html"><![CDATA[    <div class="fold">      <div class="fold-title fold-success collapsed" data-toggle="collapse" href="#collapse-ee6e2911" role="button" aria-expanded="false" aria-controls="collapse-ee6e2911">        <div class="fold-arrow">▶</div>换手率定义      </div>      <div class="fold-collapse collapse" id="collapse-ee6e2911">        <div class="fold-content">          <p>换手率:是指影视还能内市场中股票<code class="code_info">转手买卖的频率</code>。在技术分析中，换手率指标是<strong><em><code>反映市场交投活跃程度 &amp; 反映股票流通性强烈</code></em></strong>的最重要技术指标之一换手率</p>        </div>      </div>    </div><div class="note note-info @换手率定义">            <p>换手率因样本总体的<code>性质不同</code>，则有不同的指标类型；例如:交易所所有上市股票的总换手率、基于菜单个股发行数量的转换率、基于某机构持有组合的换手率</p>          </div><h1 id="理解换手率">理解换手率</h1><ol type="1"><li><p>一般情况下大多数股票每日换手率在 1% ~2.5%<code class="code_tips">（不包括初上市的股票）</code></p></li><li><p>70%的股票换手率基本在 3%之内</p></li><li><p>当一支股票换手率在 3% ~7%之间时，代表该股进入相对活跃的状态<code class="code_info">（3%成为一种分界线）</code></p></li><li><p>当一支股票换手率在 7% ~ 10%之间时，代表该股为强势股 &amp;<code>股价正处于高度活跃当中</code></p></li><li><p>当一支股票换手率在 10% ~ 15%之间时，大庄密切操作</p></li><li><p>当一支股票换手率在 15% &amp;持续多日的情况下，此股也许会变最大黑马</p></li></ol><figure><img src="./huanshoulv.png" alt="换手率" /><figcaption aria-hidden="true">换手率</figcaption></figure><h1 id="换手率代表了那些内容">换手率代表了那些内容？</h1><ol type="1"><li><p>换手率越高，意味着该支股票的<code>交投越活越</code><mark style="background:#DECCDC;color:#92588B">投资者购买欲望很强烈</mark></p></li><li><p>换手率高一般意味着股票<code>流通性好</code><mark style="background:#DECCDC;color:#92588B">换手率较高的股票，往往也是短线资金追逐的对象，股价起伏很大</mark></p></li><li><p>将换手率与股价走势相结合，可以对<code>未来的股价</code>做出一定的预测和判断<mark style="background:#DECCDC;color:#92588B">e.g.:某只股票的换手率突然上升，成交量放大，可能意味着有投资者在大量买进，股价会随着上扬</mark></p></li><li><p>底部放量的股票，其换手率高，<code>表明新资金</code>介入的迹象较为明显<mark style="background:#DECCDC;color:#92588B">越是底部换手充分，上行中的抛压越轻</mark></p></li></ol><h1 id="换手率与股价高位有什么关系">换手率与股价高位有什么关系？</h1><ul><li>高位高换手<div><p><code class="code_warning">"高换手洗盘"</code>的方式常被庄家采用。在连续几日长阳上涨后，再度高开快递高走，甚至急冲涨停，但支持不久后被打开，全天一路低走，换手陡然放大。<code>换手率不局限于10%以上,6% ~ 8%皆有可能</code></p></div></li><li>高位低换手<br/><div><p>此种情况大多数是股价涨幅较大，但平均换手率低，形成量价背离，明显不足以维持高位的股价，但股价却并不下跌/跌幅较小，而保持一种高位横向缩量整理形态。这通常是高控盘股的特征，表明庄家短期内<code class="code_warning">并不急于出局</code></p></div></li></ul><h1 id="换手率的应用">换手率的应用</h1><ul><li>低位高换手率<div>较高换手率能够维持几个交易日，则一般可以看做是新增资金介入较为明显的一种迹象，此时高换手的可信度较大</div></li></ul><p><img src="./diweigaohuanshoulv.png" /></p><ul><li>高位高换手率<div>较高换手率能够维持几个交易日，则一般可以看做是新增资金介入较为明显的一种迹象，此时高换手的可信度较大。</div><code class="code_info">个股在相对高位突然出现高换手率而成交量突然放大，一般成为下跌前兆的可能性较大。这种情况多半随着大利好出台，顺利发筹码，＂利好出尽是利空＂</code></li></ul><p><img src="./gaoweigaohuanshoulv.png" /></p><ul><li>长时间低换手率<div>长时间低换手率的个股往往是限于长期低迷行情中，此时投资者不宜进入，下跌趋势还未结束</div></li></ul><p><img src="./changshijiandihuanshoulv.png" /></p>]]></content>
    
    
    <categories>
      
      <category>股票</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>股票盘口常见术语</title>
    <link href="/%E8%82%A1%E7%A5%A8%E7%9B%98%E5%8F%A3%E5%B8%B8%E8%A7%81%E6%9C%AF%E8%AF%AD/"/>
    <url>/%E8%82%A1%E7%A5%A8%E7%9B%98%E5%8F%A3%E5%B8%B8%E8%A7%81%E6%9C%AF%E8%AF%AD/</url>
    
    <content type="html"><![CDATA[<ul><li><p>涨停板: 指证券市场中交易当天股价的最高限度</p></li><li><p>跌停板: 指证券市场中交易当天股价的最低限度</p></li><li><p>平开: 指股票的当日开盘价 = 前一日收盘价</p></li><li><p>高开: 指股票的当日开盘价 &gt; 前一日收盘价</p></li><li><p>低开: 指股票的当日开盘价 &lt; 前一日收盘价</p></li><li><p>缺口: 指交易图形上没有交易的价格范围</p></li><li><p>获利盘: 指在交易的当下，卖出能赚钱的那部分筹码</p></li><li><p>套牢盘: 指在交易的当下，卖出亏钱的那部分筹码</p></li><li><p>洗盘:拉高股价过程中有一上下震荡，让先前买进股票的投资者卖出。<font color="#843127" style="padding:0.2em;background: #DAC1BE" >目的:清理内浮动筹码，抬高整理持仓成本</font></p></li><li><p>崩盘:指价格急剧下跌，当前交易者极狐全部倍套牢，没有新股民入场</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>股票</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>股票基础术语</title>
    <link href="/%E8%82%A1%E7%A5%A8%E5%9F%BA%E7%A1%80%E6%9C%AF%E8%AF%AD/"/>
    <url>/%E8%82%A1%E7%A5%A8%E5%9F%BA%E7%A1%80%E6%9C%AF%E8%AF%AD/</url>
    
    <content type="html"><![CDATA[<h2 id="第一组">第一组</h2><ul><li>牛市：指整体市场行情普遍看涨，延续时间较长<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="至少 1~2 年">[1]</span></a></sup> 的大升势</li></ul><figure><img src="./niushi.png" alt="牛市" /><figcaption aria-hidden="true">牛市</figcaption></figure><ul><li><p>熊市：指市场行情普遍看淡，延续时间较长的大跌势</p><figure><img src="./xiongshi.png" alt="熊市" /><figcaption aria-hidden="true">熊市</figcaption></figure></li><li><p>多头: 指的是正在买进 / 持有股票的投资者</p></li><li><p>空头： 指的是正在卖出 / 不持有股票的投资</p></li></ul><h2 id="第二组">第二组</h2><ul><li><p>利多：指能促使行情上涨的主要原因、因素或信息</p></li><li><p>利空：指能促使股价下跌的原因、因素&amp;信息</p></li><li><p>长多：对股价远期看好，因而买进股票长期持有以获取长期上涨的利益</p></li><li><p>长空：对股价远期看淡，因而一直在等股价下跌很长一段时间后再买进</p></li></ul><h2 id="第三组">第三组</h2><ul><li>突破：指价格升破阻力位<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="通常是前一高点">[2]</span></a></sup> /跌穿支撑位<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="通常是前一低点">[3]</span></a></sup>（突破分为"向上突破"&amp; "向下突破"）</li></ul><figure><img src="./tupo.png" alt="突破" /><figcaption aria-hidden="true">突破</figcaption></figure><ul><li>跳空：股价受利多／利空的影响后，出现瞬时较大幅度上／下的跳动。因此跳空也分为＂向上跳空＂＆“向下跳空“</li></ul><figure><img src="./tiaokong.png" alt="跳空" /><figcaption aria-hidden="true">跳空</figcaption></figure><ul><li>追高：是指股价上涨时在相对高位买入</li></ul><figure><img src="./image.png" alt="追高" /><figcaption aria-hidden="true">追高</figcaption></figure><ul><li>出货：通常是指主力在股价相对高位的集中卖出</li></ul><h2 id="第四组">第四组</h2><ul><li><p>踏空：投资者看淡后市卖出股票／没能买进股票，该股价却一路上扬</p></li><li><p>套牢：投资者预计股价将上涨，但在买进后股价却一直下跌</p></li><li><p>调整：股价连续上涨之后出现一定幅度的回跌现象</p></li><li><p>反弹：股价连续下跌之后出现一定幅度的回升现象</p></li></ul><h2 id="第五组">第五组</h2><ul><li><p>超买：买进股票的人数在短期内超过了一定的比例，证券的价格经过显著上升后上涨乏力，买入力量暂时枯竭，反而股价最近可能下跌</p></li><li><p>超卖：卖出股票的人数在短期内超过了一定的比例，证券的价格经过显著下滑后下跌力量减弱，反而股价最近可能出现反弹</p></li></ul><h2 id="第六组">第六组</h2><ul><li><p>支撑：当股价跌到某个价位附近时停止下跌，甚至出现回升</p></li><li><p>压力：当股价上涨到某价位附近时停止上涨，甚至出现回落</p></li><li><p>放量：成交量比前一段时间明显放大</p></li><li><p>缩量：成交量比前一段时间明显缩小/市场成交清淡</p></li></ul><h2 id="第七组">第七组</h2><ul><li><p>开盘价：当日某证券开盘前一段时间集合竞价确定的成交价格</p></li><li><p>收盘价：当日某证券收盘前最后三分钟集合竞价确定的成交价格</p></li><li><p>最高价：当日某证券成交价中最高的价格</p></li><li><p>最低价：当日某证券成交价中最低的价格</p></li></ul><div class="flex"><figure><img src="./yangxian.png" alt="阳线.png" /><figcaption aria-hidden="true">阳线.png</figcaption></figure><figure><img src="./yinxian.png" alt="阴险.png" /><figcaption aria-hidden="true">阴险.png</figcaption></figure></div><h2 id="第八组">第八组</h2><ul><li>高开：指某支股票的当日开盘价 &gt; 前一交易日的收盘价</li></ul><figure><img src="./image1.png" alt="高开" /><figcaption aria-hidden="true">高开</figcaption></figure><ul><li>低开：指某支股票的当日开盘价 &lt; 前一交易日的收盘价</li></ul><figure><img src="./image2.png" alt="低开" /><figcaption aria-hidden="true">低开</figcaption></figure><ul><li>涨停：证券市场中交易当天的股价抵达当日涨跌幅限制<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="A 股：±10%、ST/\*ST：±5%、科创板：±20%">[4]</span></a></sup>最高价格</li></ul><p><img src="./image3.png" alt="涨停" /> <img src="./zhangtingban.png"alt="涨停" /></p><ul><li>跌停：证券市场中交易当天的股价抵达当日涨跌幅限制最低价格</li></ul><h2 id="第九组">第九组</h2><ul><li><p>半仓：持有的股票占投资者账户内资金的一半</p></li><li><p>空仓：投资者没有买进任何股票或卖出所有股票</p></li><li><p>斩仓：投资者为避免损失扩大而低价卖出股票</p></li><li><p>补仓：投资者已卖出所持股票或部分股票后再次买回</p></li></ul><h2 id="第十组">第十组</h2><ul><li><p>浮盈(浮动盈利)：指投资者所持股票已获得但并未真实兑现的利润</p></li><li><p>浮亏(浮动亏损)：指投资者所持股票已出现但并未真实承担的亏损</p></li><li><p>跳水：某股票在短期内快速下跌</p></li><li><p>获利出场：投资者卖出所持股票，将浮盈兑现的行为</p></li></ul><hr /><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>至少 1~2 年<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>通常是前一高点<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>通常是前一低点<a href="#fnref:3" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>A股：±10%、ST/*ST：±5%、科创板：±20%<a href="#fnref:4" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>股票</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>股票基础知识</title>
    <link href="/%E8%82%A1%E7%A5%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/%E8%82%A1%E7%A5%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<blockquote><p>股票是一种<strong><code>有价证券</code></strong>，代表股东对股份公司的所有权。它是一种资本证券，表明股票的持有者对公司的资产拥有所有权，并有权从公司的利润中获得分红。每支股票背后都有一家上市公司。</p></blockquote><h1 id="PKTQj">交易公司</h1><table><thead><tr class="header"><th style="text-align: center;">名称</th><th style="text-align: center;">股票代码</th><th style="text-align: center;">要求</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">上海证券交易所</td><td style="text-align: center;">60 开头</td><td style="text-align: center;">/</td></tr><tr class="even"><td style="text-align: center;">深圳证券交易所</td><td style="text-align: center;">0 开头</td><td style="text-align: center;">/</td></tr><tr class="odd"><td style="text-align: center;">北京证券交易所</td><td style="text-align: center;">4 / 8 开头</td><td style="text-align: center;">8 开头需有 50 万 ➕ 的资产</td></tr><tr class="even"><td style="text-align: center;">创业板</td><td style="text-align: center;">3 开头</td><td style="text-align: center;">需证券公司开通 &amp; 需要有 2 年<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="两年计算方法：从开户后第一笔买入开始计算">[1]</span></a></sup>交易经验 ➕ 月均 10w 的交易资产</td></tr><tr class="odd"><td style="text-align: center;">科创板</td><td style="text-align: center;">688 开头</td><td style="text-align: center;">要有 2 年交易经验 ➕ 月均最低 50w的交易资产</td></tr></tbody></table><h1 id="hv39C">股票的分类</h1><p>股票代码通常由 6 位数字组成。</p><ul><li><strong>按上市地点分类</strong><ul><li>普通股：标准股票，代表着一定的股车权利；可上市交易</li><li>优先股：特殊股票，一般不上市交易收入来自固定股息</li><li>A 股：境内上市的普通股票</li><li>B 股：境内上市的特种股票。上海以美元交易，深圳以港币交易</li><li>H 股：境内注册，在我国香港上市的股票</li><li>N 股：在美国纽约证券交易所上市的股票</li><li>S 股：在新加坡证券交易所上市的股票</li></ul></li><li><strong>按业绩分类</strong><ul><li>红筹股：指境外注册，香港上市，但业务在内地的公司股票</li><li>蓝筹股：指资本雄厚、股本和市值较大的信善的公司股票</li><li>绩优股：指业绩优良 &amp; 比较稳定的公司股票</li><li>绩差股：指业绩较差的公司股票</li></ul></li><li><strong>按主体分类</strong><ul><li>国有股：由国家部门/机构进行所持有或者投资的股票</li><li>法人股：由上市公司企业法人进行持有并投资的股票</li><li>社会公众股：由社会公众已发投资持有并投资的股票</li></ul></li><li><strong>按其他分类</strong><ul><li>XD 开头：代表当日是这只股票的除息日</li><li>DR 开头：代表当日是这只股票的除息、除权日</li><li>XR 开头：代表当日是这只股票的除权日</li><li>N 开头：代表是当日新上市的股票</li><li>ST 开头：代表这支股票最少连续两年出现亏损</li><li>*ST 开头：代表这支股票最少连续三年出现亏损，并有退市风险</li></ul></li></ul><h1 id="ZtmIa">股票数量限制</h1><p>数量默认为 1 手(也就是 100 股) &amp; 其整数倍</p><div class="note note-info">            <p>// 4 手就是 400 股；10 手就是 1000 股；100 手就是 10000 股。<br/>例如：A 公司 100 元/股，B 公司 1 元/股。我今天想买 2 手，就是 200股，需要支付 A 公司 100*200=2000 元，B 公司 200 元。</p>          </div><h1 id="AxzbL">股票交易时间</h1><p>周一 ~ 周五&lt;法定节假日、周末不交易&gt;，其中 9：25出开盘价<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="当日交易开盘价是根据昨日的收盘价来进行涨/跌">[2]</span></a></sup>；<strong>9:15~ 9:20 可撤单可挂单，9:20 ~ 9:25 可挂单不可撤单</strong></p><ul><li>早上：9：30 ~ 11：30</li><li>下午：13：00 ~15：00</li></ul><h1 id="回转交易规则">回转交易规则</h1><ul><li>股票<code>T+1交易</code>: 即当天买入，下一个交易日可卖出</li><li>可转债<code>T+0交易</code>: 即当天买入并且当天可卖出</li></ul><h1 id="资金清算规则">资金清算规则</h1><p>按 T+1原则进行资金清算<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="当天卖出的金额要第二天才能转入银行卡">[3]</span></a></sup>。资金转账时间：交易日9:00 ~ 16:00</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1"class="footnote-text"><span>两年计算方法：从开户后第一笔买入开始计算<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2"class="footnote-text"><span>当日交易开盘价是根据昨日的收盘价来进行涨/跌<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:3"class="footnote-text"><span>当天卖出的金额要第二天才能转入银行卡<a href="#fnref:3" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>股票</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>iterm2安装使用教程</title>
    <link href="/macOS%E4%B8%AD%E4%BD%BF%E7%94%A8iterm2/"/>
    <url>/macOS%E4%B8%AD%E4%BD%BF%E7%94%A8iterm2/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p><a href="https://zhuanlan.zhihu.com/p/550022490">iTerm2安装配置使用指南——保姆级</a></p>          </div><h1 id="安装-iterm2">安装 iterm2</h1><p>iterm2 有 2 中安装方式，下面我们来讲解</p><ol type="1"><li>打开<a href="https://iterm2.com/downloads.html">iterm2 官方下载地址🔗</a>，选择 Stable Releases(稳定版本)下载解压后拖到应用市场</li><li>直接通过 homebrew 安装</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install iterm2<br></code></pre></td></tr></table></figure><h1 id="配置">配置</h1><h2 id="安装-oh-my-zsh">安装 oh-my-zsh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用curl安装</span><br>sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span><br><br><span class="hljs-comment"># 使用wget安装</span><br>sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>&quot;</span><br></code></pre></td></tr></table></figure><h2 id="配置主题">配置主题</h2><p>安装成功后使用 vim 修改主题 ·</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">ZSH_THEME</span>=<span class="hljs-string">&quot;agnoster&quot;</span><br></code></pre></td></tr></table></figure><h2 id="使用配色">使用配色<br/></h2><p>这里我使用了 <font color='#c7254e'>Solarized Dark</font></p><h2 id="安装插件">安装插件</h2><ol type="1"><li>语法高亮 <font color='#c7254e'>zsh-syntax-highlighting</font></li></ol><ul><li>第一种安装方式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install zsh-syntax-highlighting<br></code></pre></td></tr></table></figure><ul><li><p>第二种安装方式</p><ul><li>下载源码</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-built_in">cd</span> ~/.oh-my-zsh/custom/plugins &amp;&amp; git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git<br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>命令补全<font color='#c7254e'>zsh-autosuggestions</font></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure><ol start="3" type="1"><li>配置插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 📢: zsh-syntax-highlighting一定要在最后</span><br>plugins=(<br>git<br>zsh-autosuggestions<br>zsh-syntax-highlighting<br>)<br></code></pre></td></tr></table></figure><ol start="4" type="1"><li>让 .zshrc 配置文件生效</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>macos</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo</title>
    <link href="/%E4%BD%BF%E7%94%A8Hexo/"/>
    <url>/%E4%BD%BF%E7%94%A8Hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="使用命令">使用命令</h1><ul><li>新建文章</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo n post 文章名 / hexo new post 文章名<br></code></pre></td></tr></table></figure><ul><li>新建文章到某个文件夹</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">hexo new post b  -p /web/a</span><br>hexo new post 展示的title名 -p 文件夹路径/文件名称<br></code></pre></td></tr></table></figure><ul><li>安全模式，用于禁用加载插件和脚本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo --safe<br></code></pre></td></tr></table></figure><ul><li>调试模式，用于将消息详细记录到终端和 debug.log 文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo --debug<br></code></pre></td></tr></table></figure><ul><li>静默模式，用于静默输出到终端</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo --silent<br></code></pre></td></tr></table></figure><ul><li>链接别的文章</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% post<span class="hljs-emphasis">_link 文章title &#x27;展示名称&#x27;%&#125;</span><br></code></pre></td></tr></table></figure><h1 id="tag-插件">Tag 插件</h1><h2 id="便签">便签</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 类型可选 primary、secondary、success、danger、warning、info、light</span><br><br>&#123;% note 类型参数 %&#125;<br> 文字 或者 <span class="hljs-code">`markdown`</span> 均可<br>&#123;% endnote %&#125;<br></code></pre></td></tr></table></figure><div class="note note-secondary">            <p>类型参数: secondary</p>          </div><div class="note note-success">            <p>类型参数: success</p>          </div><div class="note note-danger">            <p>类型参数: danger</p>          </div><div class="note note-warning">            <p>类型参数: warning</p>          </div><div class="note note-info">            <p>类型参数: info</p>          </div><div class="note note-light">            <p>类型参数: light</p>          </div><h2 id="行内标签">行内标签</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 类型可选 primary、default、success、danger、warning、info</span><br><br>&#123;% label 类型参数 @展示文本 %&#125;<br></code></pre></td></tr></table></figure><span class="label label-primary">primary</span><span class="label label-default">default</span><span class="label label-info">info</span><span class="label label-success">success</span><span class="label label-warning">warning</span><span class="label label-danger">danger</span><h2 id="折叠块">折叠块</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% fold 类型参数 @折叠标题 %&#125;<br>需要折叠的一段内容，支持 markdown<br>&#123;% endfold %&#125;<br></code></pre></td></tr></table></figure>    <div class="fold">      <div class="fold-title fold-primary collapsed" data-toggle="collapse" href="#collapse-b5714680" role="button" aria-expanded="false" aria-controls="collapse-b5714680">        <div class="fold-arrow">▶</div>primary      </div>      <div class="fold-collapse collapse" id="collapse-b5714680">        <div class="fold-content">          <p>需要折叠的一段内容，支持 markdown</p>        </div>      </div>    </div>    <div class="fold">      <div class="fold-title fold-default collapsed" data-toggle="collapse" href="#collapse-b5714680" role="button" aria-expanded="false" aria-controls="collapse-b5714680">        <div class="fold-arrow">▶</div>default      </div>      <div class="fold-collapse collapse" id="collapse-b5714680">        <div class="fold-content">          <p>需要折叠的一段内容，支持 markdown</p>        </div>      </div>    </div>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-b5714680" role="button" aria-expanded="false" aria-controls="collapse-b5714680">        <div class="fold-arrow">▶</div>info      </div>      <div class="fold-collapse collapse" id="collapse-b5714680">        <div class="fold-content">          <p>需要折叠的一段内容，支持 markdown</p>        </div>      </div>    </div>    <div class="fold">      <div class="fold-title fold-success collapsed" data-toggle="collapse" href="#collapse-b5714680" role="button" aria-expanded="false" aria-controls="collapse-b5714680">        <div class="fold-arrow">▶</div>success      </div>      <div class="fold-collapse collapse" id="collapse-b5714680">        <div class="fold-content">          <p>需要折叠的一段内容，支持 markdown</p>        </div>      </div>    </div>    <div class="fold">      <div class="fold-title fold-warning collapsed" data-toggle="collapse" href="#collapse-b5714680" role="button" aria-expanded="false" aria-controls="collapse-b5714680">        <div class="fold-arrow">▶</div>warning      </div>      <div class="fold-collapse collapse" id="collapse-b5714680">        <div class="fold-content">          <p>需要折叠的一段内容，支持 markdown</p>        </div>      </div>    </div>    <div class="fold">      <div class="fold-title fold-danger collapsed" data-toggle="collapse" href="#collapse-b5714680" role="button" aria-expanded="false" aria-controls="collapse-b5714680">        <div class="fold-arrow">▶</div>danger      </div>      <div class="fold-collapse collapse" id="collapse-b5714680">        <div class="fold-content">          <p>需要折叠的一段内容，支持 markdown</p>        </div>      </div>    </div>    <div class="fold">      <div class="fold-title fold-light collapsed" data-toggle="collapse" href="#collapse-b5714680" role="button" aria-expanded="false" aria-controls="collapse-b5714680">        <div class="fold-arrow">▶</div>light      </div>      <div class="fold-collapse collapse" id="collapse-b5714680">        <div class="fold-content">          <p>需要折叠的一段内容，支持 markdown</p>        </div>      </div>    </div><h2 id="勾选框">勾选框</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% cb 显示的文本, 默认是否勾选,默认false?, 后面的文字是否换行,默认false? %&#125;<br></code></pre></td></tr></table></figure><div>            <input type="checkbox"  >普通示例          </div><div>            <input type="checkbox"  checked="checked">默认勾选          </div><div>            <input type="checkbox"  >不默认勾选          </div>            <input type="checkbox"  >文本换行          <div>            <input type="checkbox"  >文本不换行          </div><h2 id="按钮">按钮</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% btn 跳转链接, 显示的文字, 鼠标悬停时显示的文字? %&#125;<br></code></pre></td></tr></table></figure><a class="btn" href="https://www.baidu.com/"  title="准备跳转到百度" target="_blank">button</a>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo配置Google Search</title>
    <link href="/Hexo%E9%85%8D%E7%BD%AEGoogle%20Search/"/>
    <url>/Hexo%E9%85%8D%E7%BD%AEGoogle%20Search/</url>
    
    <content type="html"><![CDATA[<blockquote><p>在写文章的时候，我们想让我们的网站排名靠前，并且搜索某个关键字可以找到我们当前的文章，这里我们需要使用“搜索引擎优化”SEO，下面我们以Google Search 为例，来为我们的网站配置。</p></blockquote><h1 id="配置">配置</h1><ol type="1"><li><p>打开谷歌搜索网站点击立即使用 <ahref="https://search.google.com/search-console/about">Google Search</a><img src="./01.png" alt="ssh key" /> <br/></p></li><li><p>登录谷歌账号</p></li><li><p>填写我们的域名点继续 <img src="./02.png" /> <imgsrc="./03.png" /></p></li><li><p>下载文件到我们博客 source 目录下</p></li></ol><div class="note note-info">            <p>📢 这里需要注意一点，在将文任何.html 的文件放在 source中在我们将博客发表时.html 文件会被编译成一个标准的 html文件对象，这里我们需要再<strong>_config.yml</strong>中找到<strong><em>skip_render</em></strong>将需要忽略编译的文件都放在这个下面；这样文件不会被编译。</p>          </div><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">skip_render:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;刚刚下载到source的google文件名.html&quot;</span><br></code></pre></td></tr></table></figure><p><img src="./04.png" /> <img src="./05.png" /></p><h1 id="验证">验证</h1><ul><li>进入到 Google Search 中点击验证即可 <img src="./06.png" /> <imgsrc="./07.png" /></li></ul><h1 id="添加站点地图">添加站点地图</h1><ol type="1"><li>添加<font color="#937B57"><strong>hexo-generator-sitemap</strong></font>插件</li></ol><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> hexo-generator-sitemap<br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>配置<strong><em>config.yml</em></strong></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">plugins:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">hexo-asset-img</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">hexo-generator-sitemap</span><br><span class="hljs-attr">sitemap:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">sitemap.xml</span><br>  <span class="hljs-attr">tag:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">category:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><ol start="3" type="1"><li><p>部署到 xxx.github.io</p></li><li><p>在控制面板中配置站点地图，如下图所示： <img src="./08.png" /><img src="./09.png" /></p></li><li><p>等待 Google 刷新，能搜索到就是成功了 <imgsrc="./10.png" /></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Q版</title>
    <link href="/Q%E7%89%88/"/>
    <url>/Q%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h1 id="正面">正面</h1><ol type="1"><li>画一个圆</li><li>画面中线 <span class="math inline">\(\Rightarrow\)</span>圆竖着对半切，左右各 <span class="math inline">\(1 \over 2\)</span></li><li>找到眉毛的位置 <span class="math inline">\(\Rightarrow\)</span>找到横向的中心线圆竖着对半切,上下各 <spanclass="math inline">\(\frac{1}{2}\)</span></li><li>找到眼睛中线的位置 <span class="math inline">\(\Rightarrow\)</span>眉毛到下巴的中间画一条线</li><li>找到上眼睑的位置 <span class="math inline">\(\Rightarrow\)</span>眉毛到眼睛中线的中间画一条线</li><li>找到下眼睑的位置 <span class="math inline">\(\Rightarrow\)</span>眼睛中线到下巴的中间画一条线 <div class="note note-success">            <p>眼睛间距为一个眼睛的大小</p>          </div> <!--      <video width="100%" controls="controls" src="https://illustrations-1256863744.cos.ap-nanjing.myqcloud.com/%E6%AD%A3%E9%9D%A2%E8%84%B8%E9%83%A8%E7%94%BB%E6%B3%95.mp4">您的浏览器不支持播放该视频!</video> --><img src="./zhengmian.png" /></li></ol><h1 id="半侧面">半侧面</h1><ol type="1"><li>画一个圆</li><li>画面中线 <span class="math inline">\(\Rightarrow\)</span>圆竖着对半切，左右各 <span class="math inline">\(1 \over 2\)</span></li><li>找到眉毛的位置 <span class="math inline">\(\Right arrow\)</span>找到横向的中心线圆竖着对半切,上下各 <spanclass="math inline">\(\frac{1}{2}\)</span></li><li>找到眼睛中线的位置 <span class="math inline">\(\Rightarrow\)</span>眉毛到下巴的中间画一条线</li><li>找到上眼睑的位置 <span class="math inline">\(\Rightarrow\)</span>眉毛到眼睛中线的中间画一条线</li><li>找到下眼睑的位置 <span class="math inline">\(\Rightarrow\)</span>眼睛中线到下巴的中间画一条线 <div class="note note-success">            <p>眼睛间距为一个眼睛的大小</p>          </div> <!--      <video width="100%" controls="controls" src="https://illustrations-1256863744.cos.ap-nanjing.myqcloud.com/%E6%AD%A3%E9%9D%A2%E8%84%B8%E9%83%A8%E7%94%BB%E6%B3%95.mp4">您的浏览器不支持播放该视频!</video> --><img src="./zhengmian.png" /></li></ol><h1 id="侧面">侧面</h1><ol type="1"><li>画一个圆</li><li>画面中线 <span class="math inline">\(\Rightarrow\)</span>圆竖着对半切，左右各 <span class="math inline">\(1 \over 2\)</span></li><li>找到眉毛的位置 <span class="math inline">\(\Rightarrow\)</span>找到横向的中心线圆竖着对半切,上下各 <spanclass="math inline">\(\frac{1}{2}\)</span></li><li>找到眼睛中线的位置 <span class="math inline">\(\Rightarrow\)</span>眉毛到下巴的中间画一条线</li><li>找到上眼睑的位置 <span class="math inline">\(\Rightarrow\)</span>眉毛到眼睛中线的中间画一条线</li><li>找到下眼睑的位置 <span class="math inline">\(\Rightarrow\)</span>眼睛中线到下巴的中间画一条线 <div class="note note-success">            <p>眼睛间距为一个眼睛的大小</p>          </div> <!--      <video width="100%" controls="controls" src="https://illustrations-1256863744.cos.ap-nanjing.myqcloud.com/%E6%AD%A3%E9%9D%A2%E8%84%B8%E9%83%A8%E7%94%BB%E6%B3%95.mp4">您的浏览器不支持播放该视频!</video> --><img src="./zhengmian.png" /></li></ol>]]></content>
    
    
    <categories>
      
      <category>插画</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Q版</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ui设计规范</title>
    <link href="/ui%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/"/>
    <url>/ui%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</url>
    
    <content type="html"><![CDATA[<h1 id="ios-版">IOS 版</h1><blockquote><p><a href="https://uiiiuiii.com/screen/ios.htm">iOS设计尺寸规范</a></p></blockquote><h2 id="设计尺寸规范">设计尺寸规范</h2><table><thead><tr class="header"><th style="text-align: center;">尺寸</th><th style="text-align: center;">倍数</th><th style="text-align: center;">像素比</th><th style="text-align: center;">状态栏高度</th><th style="text-align: center;">导航栏高度</th><th style="text-align: center;">Home 虚拟键</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">375*812</td><td style="text-align: center;"><span class="citation"data-cites="1x">@1x</span></td><td style="text-align: center;">1pt = 3px</td><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;">750*1624</td><td style="text-align: center;"><span class="citation"data-cites="2x">@2x</span></td><td style="text-align: center;">1pt = 2px</td><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: center;">390*844</td><td style="text-align: center;"><span class="citation"data-cites="3x">@3x</span></td><td style="text-align: center;">1pt = 3px</td><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;">393*852</td><td style="text-align: center;"><span class="citation"data-cites="3x">@3x</span></td><td style="text-align: center;">1pt = 3px</td><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h2 id="图标">图标</h2><h2 id="字体规范">字体规范</h2><h2 id="字体大小">字体大小</h2><h2 id="间距大小设置">间距大小设置</h2><h2 id="命名规范">命名规范</h2><h2 id="按钮尺寸">按钮尺寸</h2><ul><li>按钮高度 = 字体大小 * 2.4，得出结果取 4的倍数整数。<font color="#861b21">（例如：16 * 2.4 = 38.4 ≈ 40）</font></li><li>按钮宽度 = 最多容纳文本内容的宽度 + 按钮高度</li></ul><h1 id="ipad-版">IPAD 版</h1><h1 id="web-版">Web 版</h1>]]></content>
    
    
    <categories>
      
      <category>ui知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>设计规范</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Adobe After Effects常用插件</title>
    <link href="/aodeAE%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
    <url>/aodeAE%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<ol type="1"><li><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/21%20%E5%88%9D%E8%AF%86AE%E5%8A%A8%E6%95%88%E5%8F%8AMotion2.rar">🔗21 初识AE动效及Motion2.rar</a></li><li><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/22%20%E5%B0%8F%E5%9B%BE%E6%A0%87%EF%BC%8C%E5%A4%A7%E6%96%87%E7%AB%A0-%E5%8A%A8%E6%80%81%E5%9B%BE%E6%A0%87%E8%AE%BE%E8%AE%A1.rar">🔗22 小图标，大文章-动态图标设计.rar</a></li><li><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/AEUX_0.8.2%20%281%29.zip">🔗AEUX_0.8.2 (1).zip</a></li><li><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/AE%E8%84%9A%E6%9C%ACGifGun1.7.5.zip">🔗AE脚本GifGun1.7.5.zip</a></li><li><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/Mt.%20Mograph%20-%20Motion%20v2.rar">🔗Mt. Mograph - Motion v2.rar</a></li><li><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/lottie_bodymovin.zip">🔗lottie_bodymovin.zip</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>ui知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>adobe</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ui相关知识</title>
    <link href="/ui%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    <url>/ui%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="文章">文章</h1><p>来自: <ahref="https://pixso.cn/designskills/design-psychology/">设计师不得不知道的3 个设计心理学原理</a></p><p>来自: <ahref="https://www.uisdc.com/10-deterioration-design-rules">超全面！防呆设计的10 个通用设计原则 - 优设网 - 学设计上优设</a></p><p>来自: <ahref="https://www.shejitk.com/archives/9689">如何让你的设计不那么千篇一律</a></p><p>来自: <ahref="https://www.shejitk.com/archives/11514">从修改密码需求看「实现模型」与「心理模型」的差别</a></p><p>来自: <ahref="https://www.shejitk.com/archives/3311">最近节日如此多，设计师的你加班吗？</a></p><p>来自: <a href="https://huke88.com/article/7792.html">UI是道数学题之组件篇</a></p><p>来自: <ahref="https://huke88.com/article/4993.html">设计师必须要知道的五大交互心理学</a></p><p>来自: <ahref="https://www.uisdc.com/design-psychology-book-recommendation">来充电啦！推荐几本经典的设计心理学书籍（附节选及PDF）</a></p><h1 id="书籍">书籍</h1><p><a href="https://hao.uisdc.com/book/">设计师需要读的 100 本书</a></p><p><a href="https://zhuanlan.zhihu.com/p/597457966">2023年，设计师必读（用户体验设计）推荐阅读书单 (30 本,含豆瓣评分)</a></p><p><a href="https://zhuanlan.zhihu.com/p/616753618">收藏！2023年用户体验设计推荐热门书单</a></p><p><a href="https://m.ui.cn/details/642721">2023 设计读书营丨为 UI/UX设计...</a></p><p>《设计心理学（1-4 册)》 ([美]唐纳德·A·诺曼)</p><p><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/%E8%AE%BE%E8%AE%A1%E5%BF%83%E7%90%86%E5%AD%A6%EF%BC%881-4%E5%86%8C%EF%BC%89%20%28%5B%E7%BE%8E%5D%E5%94%90%E7%BA%B3%E5%BE%B7%C2%B7A%C2%B7%E8%AF%BA%E6%9B%BC%29%20%28Z-Library%29.pdf">📎设计心理学（1-4 册） ([美]唐纳德·A·诺曼) (Z-Library).pdf</a></p><p>《设计师要懂心理学》</p><p><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/%E8%AE%BE%E8%AE%A1%E5%B8%88%E8%A6%81%E6%87%82%E5%BF%83%E7%90%86%E5%AD%A6-Susan%2BWeinschenk.pdf">📎设计师要懂心理学-Susan+Weinschenk.pdf</a></p><p>《用户体验设计：100 堂入门课》 (乔尔·马什)</p><p><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1%EF%BC%9A100%E5%A0%82%E5%85%A5%E9%97%A8%E8%AF%BE%20%28%E4%B9%94%E5%B0%94%C2%B7%E9%A9%AC%E4%BB%80%29%20%28Z-Library%29.pdf">📎用户体验设计：100 堂入门课 (乔尔·马什) (Z-Library).pdf</a></p><p>《这才是用户体验设计：人人都能看懂的产品设计书》 (李磊)</p><p><ahref="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/files/%E8%BF%99%E6%89%8D%E6%98%AF%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1%EF%BC%9A%E4%BA%BA%E4%BA%BA%E9%83%BD%E8%83%BD%E7%9C%8B%E6%87%82%E7%9A%84%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1%E4%B9%A6%20%28%E6%9D%8E%E7%A3%8A%29%20%28Z-Library%29.pdf">📎这才是用户体验设计：人人都能看懂的产品设计书 (李磊)(Z-Library).pdf</a></p>]]></content>
    
    
    <categories>
      
      <category>ui知识</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>adobe Illustrator</title>
    <link href="/adobeIllustrator/"/>
    <url>/adobeIllustrator/</url>
    
    <content type="html"><![CDATA[<h1 id="图层移动">图层移动</h1><ul><li><p>上移一层：<kbd>command + [ </kbd></p></li><li><p>下移一层：<kbd>command + ] </kbd></p></li><li><p>置顶图层：<kbd>shift + command + [ </kbd></p></li><li><p>置底图层：<kbd>shift + command + ] </kbd></p></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/AI%20%E5%9B%BE%E5%B1%82%E7%A7%BB%E5%8A%A8.gif" /></p><h1 id="快捷键">快捷键</h1><p><mark> shift 单边等比缩放<br/> shift + option 中心等比缩放</mark></p><p><strong><em><font color="#aac397">这里的快捷键是我自己自定义的</font></em></strong></p><ul><li><p>圆形：<kbd>o</kbd></p></li><li><p>矩形：<kbd>R</kbd></p></li><li><p>多边形：<kbd>D</kbd></p></li><li><p>星形：<kbd>S</kbd></p></li><li><p>直线：<kbd>L</kbd></p></li><li><p>钢笔：<kbd>P</kbd></p></li><li><p>选择工具：<kbd>V</kbd></p></li><li><p>直接选择工具：<kbd>A</kbd></p></li><li><p>复制：<kbd>command + option</kbd></p></li><li><p>魔棒工具：<kbd>Y</kbd></p></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E9%AD%94%E6%A3%92.gif" /></p><ul><li>形状生成器：<kbd>shift + M</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E5%BD%A2%E7%8A%B6%E7%94%9F%E6%88%90%E5%99%A8.gif" /></p><ul><li>剪刀：<kbd>C</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E5%89%AA%E5%88%80%E5%B7%A5%E5%85%B7.gif" /></p><ul><li><p>填充 / 描边位置互换：<kbd>X</kbd></p></li><li><p>填充 / 描边颜色互换：<kbd>shiift + X</kbd></p></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E9%A2%9C%E8%89%B2%E4%BA%92%E6%8D%A2.gif" /></p><ul><li><p>变形：<mark>option + 鼠标左键按住不动上下滑：调整画笔硬度；option + 鼠标左键按住不动左右滑：调整画笔大小  </mark></p><ul><li>变形工具</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E5%8F%98%E5%BD%A2%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>宽度</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E5%AE%BD%E5%BA%A6.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>膨胀工具</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E8%86%A8%E8%83%80%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>缩拢工具</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E7%BC%A9%E6%8B%A2%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>旋转扭曲</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E6%97%8B%E8%BD%AC%E6%89%AD%E6%9B%B2.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>晶格化工具</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E6%99%B6%E6%A0%BC%E5%8C%96%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>扇贝工具</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E6%89%87%E8%B4%9D%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>褶皱工具</li></ul><video width="100%" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E8%A4%B6%E7%9A%B1%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video></li><li><p>Shaper：<kbd>shift + N</kbd></p></li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/shaper.mp4">您的浏览器不支持播放该视频!</video><ul><li>倒角和反向圆角</li></ul><h1 id="路径查找器">路径查找器</h1><blockquote><p><ahref="https://www.bilibili.com/video/BV1Ge4y1o7WB/?spm_id_from=333.337.search-card.all.click&amp;vd_source=9e2b5ef57e5911918f294f7c5d83e8d4">AI路径查找器</a></p></blockquote><ul><li>联集</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E8%81%94%E9%9B%86.gif" /></p><ul><li>减去顶层</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E5%87%8F%E5%8E%BB%E9%A1%B6%E5%B1%82.gif" /></p><ul><li>交集</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E4%BA%A4%E9%9B%86.gif" /></p><ul><li>差集</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E5%B7%AE%E9%9B%86.gif" /></p><ul><li>合并</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E5%90%88%E5%B9%B6.gif" /></p><ul><li>修边</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E4%BF%AE%E8%BE%B9.gif" /></p><ul><li>裁剪</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E8%A3%81%E5%89%AA.gif" /></p><ul><li>轮廓</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E8%BD%AE%E5%BB%93.gif" /></p><ul><li>减去后方对象</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/AI/%E5%87%8F%E5%8E%BB%E5%90%8E%E6%96%B9%E5%AF%B9%E8%B1%A1.gif" /></p><h1 id="other">Other</h1><ul><li>路径 - 描边轮廓化：放大缩小不模糊</li></ul>]]></content>
    
    
    <categories>
      
      <category>ui知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>adobe</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>adobe Photoshop</title>
    <link href="/adobePhotoshop/"/>
    <url>/adobePhotoshop/</url>
    
    <content type="html"><![CDATA[<h1 id="分辨率单位ppi">分辨率：单位(ppi)</h1><ul><li>像素</li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%83%8F%E7%B4%A0.png" /></p><ul><li>分辨率：一立方厘米里面有多少像素<font color="#304d68">(即一立方厘米里面有多少长*多少宽的格子)</font><ul><li>尺寸越大，分辨率越小</li><li>分辨率越大，像素大小越小</li><li>分辨率越大，画面越细腻</li></ul></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%88%86%E8%BE%A8%E7%8E%87.png" /></p><h1 id="图片格式">图片格式</h1><ul><li>jpg /jpeg：做兼职或者平时预览的图片，只有一个图层。<font color="#304d68">注意：发给客户不要发高清的，除非支付完设计费用；品质越高画面越细腻；兼职记得🏠 水印；文件大小根据实际情况</font><ul><li>适用范围<ul><li>修图</li><li>海报</li></ul></li><li>特点<ul><li>内存小</li><li>画质高</li><li>压缩速度快 <imgsrc="https://img95.699pic.com/photo/40006/5893.jpg_wh860.jpg" /></li></ul></li></ul></li><li>gif：动态图<ul><li>适用范围<ul><li>表情包</li><li>电商动图 <imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/ps/fireworks-rc-upload-1712452917775-9.gif" /></li></ul></li></ul></li><li>Png：无背景清晰原图（一般是素材文件格式、免抠图；可以是透明底）</li><li>psd：ps制作可修改源文件<font color="#304d68">(注意：一般不要发源文件给对方；版权)</font><ul><li>特点<ul><li>方便修改</li></ul></li></ul></li></ul><h1 id="保存方式">保存方式</h1><ul><li>存储副本：<kbd>command + shift + s</kbd></li><li>导出：<kbd>option + command + shift + w</kbd></li><li>web 所用格式(旧版)：<kbd>option + command + shift + s</kbd></li></ul><h1 id="颜色模式">颜色模式</h1><ul><li><p>位图模式：只使用黑白两种颜色表示像素</p><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/ps/位图模式-rc-upload-1712452917775-15.mp4"><p>您的浏览器不支持播放该视频!</p></video></li><li><p>位图：点阵图像 / 栅格图像，是由称作像素（图片元素）的单个点组成的<imgsrc="https://photo.16pic.com/00/34/57/16pic_3457133_b.jpg" /></p></li><li><p>灰度模式：只使用黑白灰三种颜色表示像素<video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E7%81%B0%E5%BA%A6%E6%A8%A1%E5%BC%8F.mp4 ">您的浏览器不支持播放该视频!</video></p></li><li><p>RGB 模式：电子屏幕计算颜色<mark>（三原色： 红、绿、蓝）==&gt;适用于物体本身就能发光的物体。 </mark><font color="#304d68">例如：电脑、手机、电视机</font></p></li><li><p>CMYK模式：油墨印刷计算颜色<mark>（青蓝色、品红色、黄色、黑色）==&gt;由太阳光照射反射出的颜色</mark></mark><font color="#304d68">例如：打印的海报、印刷的书本</font></p></li><li><p>LAB 模 式：人眼所看到的所有色彩的色彩模式</p></li></ul><h1 id="快捷键">快捷键</h1><p><strong><em><font color="#aac397">下列快捷键都是我使用系统默认&amp;自定义的</font></em></strong>- 标尺：<kbd>command + R</kbd></p><ul><li><p>矩形：<kbd>R</kbd></p></li><li><p>圆形：<kbd>O</kbd></p></li><li><p>三角形：<kbd>S</kbd></p></li><li><p>多边形：<kbd>D</kbd></p></li><li><p>直线：<kbd>L</kbd></p></li><li><p>钢笔：<kbd>P</kbd></p></li><li><p>文本工具：<kbd>T</kbd></p></li><li><p>吸取颜色：<kbd>I</kbd></p></li><li><p>画笔工具：<kbd>B</kbd></p></li><li><p>橡皮擦工具：<kbd>E</kbd></p></li><li><p>裁剪工具：<kbd>C</kbd></p></li><li><p>自由变换：<kbd>command + T</kbd></p></li><li><p>颜色填充</p><ul><li>切换前景色：<kbd>option + delete</kbd></li><li>切背景色：<kbd>command + delete</kbd></li><li>切换前景色 / 背景色：<kbd>X / Shift + X</kbd></li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/color.mp4"><p>您的浏览器不支持播放该视频!</p></video></li><li><p>选取：<kbd>M</kbd></p><p><strong><mark style="background-color:#A0AFAE;color:#fff" >用于抠图、修色、调色、合成等</mark></strong></p><ul><li>添加到选取：<kbd>shift</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E6%B7%BB%E5%8A%A0%E5%88%B0%E9%80%89%E5%8F%96.gif" /></p><ul><li>从选取减去：<kbd>option</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E4%BB%8E%E9%80%89%E5%8C%BA%E4%B8%AD%E5%88%A0%E9%99%A4.gif" /></p><ul><li>与选取交叉：<kbd>option + Shift</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E4%BA%A4%E5%8F%89%E9%80%89%E5%8C%BA.gif" /></p><ul><li>取消选取：<kbd>command + D</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%8F%96%E6%B6%88%E9%80%89%E5%8C%BA.gif" /></p><ul><li>反选：<kbd>command + Shift + i</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%8F%8D%E9%80%89.gif" /></p><ul><li>复制选区：<kbd>command + J</kbd></li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%A4%8D%E5%88%B6%E9%80%89%E5%8C%BA.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>边界</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E8%BE%B9%E7%95%8C.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>扩展</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E6%89%A9%E5%B1%95%E9%80%89%E5%8C%BA.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>收缩</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E6%94%B6%E7%BC%A9%E9%80%89%E5%8C%BA.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>羽化：<font color="#304d68">先羽化再选取</font></li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E7%BE%BD%E5%8C%96.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>存储选区 &amp; 载入选区</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E8%BD%BD%E5%85%A5%E9%80%89%E5%8C%BA.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>变换选区</li></ul></li><li><p>魔法棒：<kbd>Y</kbd></p></li><li><p>对象选择工具：<kbd>W</kbd></p></li><li><p>快速选择工具：<kbd>W</kbd><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E9%AD%94%E6%A3%92.mp4">您的浏览器不支持播放该视频!</video></p></li><li><p>图框工具：<kbd>K</kbd></p></li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%9B%BE%E6%A1%86%E5%B7%A5%E5%85%B7.mp4">您的浏览器不支持播放该视频!</video><ul><li><p>修复工具：<kbd>J</kbd></p><ul><li>污点修复画笔</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E6%B1%A1%E7%82%B9%E4%BF%AE%E5%A4%8D%E7%94%BB%E7%AC%94%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>修复工具</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E4%BF%AE%E5%A4%8D%E7%94%BB%E7%AC%94%E5%B7%A5%E5%85%B7.mp4 "><p>您的浏览器不支持播放该视频!</p></video><ul><li>修补工具</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E4%BF%AE%E8%A1%A5%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>内容识别</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%86%85%E5%AE%B9%E8%AF%86%E5%88%AB%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video></li><li><p>渐变工具：<kbd>G</kbd></p><ul><li>线性渐变</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E7%BA%BF%E6%80%A7%E6%B8%90%E5%8F%98.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>径向渐变</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>角度渐变</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E8%A7%92%E5%BA%A6%E6%B8%90%E5%8F%98.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>对称渐变</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%AF%B9%E7%A7%B0%E6%B8%90%E5%8F%98.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>菱形渐变</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E8%8F%B1%E5%BD%A2%E6%B8%90%E5%8F%98.mp4"><p>您的浏览器不支持播放该视频!</p></video></li><li><p>模糊工具</p><ul><li>模糊：把图像变模糊</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E6%A8%A1%E7%B3%8A%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>锐化：把模糊的图像变清晰</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E9%94%90%E5%8C%96.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li>涂抹：类似于液化</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E6%B6%82%E6%8A%B9.mp4"><p>您的浏览器不支持播放该视频!</p></video></li><li><p>减淡工具：<kbd>U</kbd></p><ul><li>减淡 / 加深：把画面变白 / 深</li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E6%B5%B7%E7%BB%B5%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video><ul><li><p>海绵</p><ul><li>去色：吸取有颜色的部分，让颜色变为黑 ==&gt;<strong>降低饱和度</strong></li><li>加色：吸取有颜色的部分，让颜色变为白 ==&gt;<strong>提亮饱和度</strong></li></ul><video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E6%B5%B7%E7%BB%B5%E5%B7%A5%E5%85%B7.mp4"><p>您的浏览器不支持播放该视频!</p></video></li></ul></li><li><p>五大图层</p><ul><li><p>新建图层：<kbd>command + shift + N</kbd><video width="100%" controls="controls" src="">您的浏览器不支持播放该视频!</video></p></li><li><p>合并图层：<kbd>command + E</kbd><video width="100%" controls="controls" src="">您的浏览器不支持播放该视频!</video></p></li><li><p>盖印(可见)图层<font color="#304d68">（合并所有可见图层并生成新的图层）</font>：<kbd>command+ option + shift + E</kbd><video width="100%" controls="controls" src="">您的浏览器不支持播放该视频!</video></p></li><li><p>调整图层</p><ul><li>上移：<kbd>command + ]</kbd></li><li>下移：<kbd>command + [</kbd></li><li>置顶：<kbd>command + shift + ]</kbd></li><li>置底：<kbd>command + shift + [</kbd><video width="100%" controls="controls" src="">您的浏览器不支持播放该视频!</video></li></ul></li><li><p>图层编组：<kbd>command + G</kbd></p></li><li><p>取消图层编组：<kbd>command + shift + G</kbd></p></li><li><p>图层基础操作</p><ul><li>锁定所有：<kbd>command + /</kbd></li><li>位置锁定<video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E4%BD%8D%E7%BD%AE%E9%94%81%E5%AE%9A.mp4">您的浏览器不支持播放该视频!</video></li><li>图像锁定<video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%9B%BE%E5%83%8F%E9%94%81%E5%AE%9A.mp4">您的浏览器不支持播放该视频!</video></li><li>透明图层锁定<video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E9%80%8F%E6%98%8E%E5%9B%BE%E5%B1%82%E9%94%81%E5%AE%9A.mp4">您的浏览器不支持播放该视频!</video></li><li>不透明度 &amp; 填充<video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E4%B8%8D%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%A1%AB%E5%85%85.mp4">您的浏览器不支持播放该视频!</video></li></ul></li><li><p>智能图层:起到一个保护图层的作用<video width="100%" controls="controls" src="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E6%99%BA%E8%83%BD%E5%AF%B9%E8%B1%A1.mp4">您的浏览器不支持播放该视频!</video></p></li><li><p>文字图层</p></li><li><p>形状图层 <imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/PS/%E5%9B%BE%E5%B1%82.png" /></p></li></ul></li><li><p>调整图层</p></li><li><p>四大蒙版</p><ul><li>图层蒙版<video width="100%" controls="controls" src="">您的浏览器不支持播放该视频!</video></li><li>剪贴蒙版：<kbd>command + option + G</kbd><video width="100%" controls="controls" src="">您的浏览器不支持播放该视频!</video></li><li>快速蒙版：<kbd>command + option + G</kbd><video width="100%" controls="controls" src="">您的浏览器不支持播放该视频!</video></li><li>矢量蒙版：<kbd>command + option + G</kbd><video width="100%" controls="controls" src="">您的浏览器不支持播放该视频!</video></li></ul></li><li><p>滤镜库</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>ui知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>adobe</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Figma快捷键</title>
    <link href="/Figma%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <url>/Figma%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    
    <content type="html"><![CDATA[    <div class="fold">      <div class="fold-title fold-success collapsed" data-toggle="collapse" href="#collapse-b150c2c9" role="button" aria-expanded="false" aria-controls="collapse-b150c2c9">        <div class="fold-arrow">▶</div>本地变量      </div>      <div class="fold-collapse collapse" id="collapse-b150c2c9">        <div class="fold-content">          <ul><li>number : 数值，适用于<code>尺寸、圆角、自动布局等属性</code></li><li>color : <code>颜色填充</code></li><li>string : 字符串，适用于<code>文本图层、变体属性</code></li><li>boolean : 布尔，适用于<code>开关切换</code></li></ul>        </div>      </div>    </div><h1 id="快捷键">快捷键</h1><h2 id="工具">工具</h2><ul><li>移动：<kbd>v</kbd></li><li>缩放：<kbd>K</kbd></li><li>抓手：<kbd>H</kbd></li><li>评论：<kbd>C</kbd></li><li>文本：<kbd>T</kbd></li><li>开发模式：<kbd>shift + d</kbd></li><li>工具：<kbd>command + k</kbd></li><li>画框：<kbd>F</kbd></li><li>分区：<kbd>shift + s</kbd></li><li>切片：<kbd>S</kbd></li></ul><h2 id="形状">形状</h2><ul><li><p>钢笔：<kbd>P</kbd></p></li><li><p>铅笔：<kbd>shift + p</kbd></p><p><img src="./pen.gif" /></p></li><li><p>矩形：<kbd>R</kbd></p></li><li><p>直线：<kbd>L</kbd></p></li><li><p>箭头：<kbd>shift + L</kbd></p></li><li><p>椭圆：<kbd>O</kbd></p><ul><li>正圆：<kbd>shift + O</kbd> <img src="./round.gif" /></li></ul></li><li><p>图片/视频：<kbd>shift + command + k</kbd></p></li></ul><h2 id="视图">视图</h2><ul><li><p>搜索文件：<kbd>command + /</kbd></p><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/%E6%90%9C%E7%B4%A2%E6%96%87%E4%BB%B6.gif" /></p></li><li><p>切换 icon：<kbd>command + option</kbd></p></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/%E5%88%87%E6%8D%A2icon.gif" /></p><ul><li>自动布局：<kbd>shift + A</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80.gif" /></p><ul><li>figma 重命名：<kbd>command + R</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/figma%E6%89%B9%E9%87%8F%E9%87%8D%E5%91%BD%E5%90%8D.gif" /></p><ul><li>锁定 / 解锁图层：<kbd>command + shift + L</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/figma%E9%94%81%E5%AE%9A%E5%9B%BE%E5%B1%82.gif" /></p><ul><li>快速折叠侧边栏：<kbd>option + L</kbd></li></ul><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/figma%E5%BF%AB%E9%80%9F%E6%8A%98%E5%8F%A0.gif" /></p><div class="note note-success">            <p>想要设计稿拉长距离，内容不变： 只需要在容器上按住<strong><code>command</code></strong> 键进行拉伸即可</p>          </div>]]></content>
    
    
    <categories>
      
      <category>ui知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Figma</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>macos中安装并mysql</title>
    <link href="/macos%E4%B8%AD%E5%AE%89%E8%A3%85%E5%B9%B6mysql/"/>
    <url>/macos%E4%B8%AD%E5%AE%89%E8%A3%85%E5%B9%B6mysql/</url>
    
    <content type="html"><![CDATA[<p><ahref="https://blog.csdn.net/qq_41300598/article/details/122665145"># Mac中 MySQL 的安装与卸载</a></p><p><a href="https://zhuanlan.zhihu.com/p/27960044"># Mac 系统下安装配置MySQL 的方法</a></p><h1 id="安装">安装</h1><ul><li>1、下载&amp;安装 mysql</li><li>2、安装成功后会提示初始密码，记住他 <imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/mysql%E5%88%9D%E5%A7%8B%E5%AF%86%E7%A0%81.jpg"alt="mysql初始密码" /></li><li>3、查看 mysql 版本号 <imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/%E6%9F%A5%E7%9C%8B%E7%89%88%E6%9C%AC%E5%8F%B7.png"alt="查看版本号" /></li></ul><h1 id="配置">配置</h1><h2 id="终端篇">终端篇</h2><ul><li>创建.bash_profile 文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">cd ~ &amp;&amp; touch .bash_profile<br></code></pre></td></tr></table></figure><ul><li>打开创建的.bash_profile 文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">open -e .bash_profile<br></code></pre></td></tr></table></figure><ul><li>配置环境</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">export PATH=$&#123;PATH&#125;:/usr/local/mysql/bin<br></code></pre></td></tr></table></figure><h2 id="zshrc-篇">.zshrc 篇</h2><ul><li>编辑.zshrc</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">vi ~/.zshrc<br></code></pre></td></tr></table></figure><ul><li>配置环境</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">export PATH=$&#123;PATH&#125;:/usr/local/mysql/bin<br></code></pre></td></tr></table></figure><ul><li>全局生效</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">source ~/.zshrc<br></code></pre></td></tr></table></figure><h1 id="使用">使用</h1><ul><li>重新设置密码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">set password for root@localhost = password(‘新密码’);<br></code></pre></td></tr></table></figure><ul><li>登录 mysql</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql -uroot -p<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/%E7%99%BB%E5%BD%95mysql.png"alt="登录mysql" /><figcaption aria-hidden="true">登录mysql</figcaption></figure><ul><li>创建数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE DATABASE 数据库名称;<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93.png"alt="创建数据库" /><figcaption aria-hidden="true">创建数据库</figcaption></figure><ul><li>查看数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show databases;<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93.png"alt="查看数据库" /><figcaption aria-hidden="true">查看数据库</figcaption></figure><ul><li>使用数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">use 数据库名称;<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93.png"alt="使用数据库" /><figcaption aria-hidden="true">使用数据库</figcaption></figure><ul><li>删除数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 判断数据库是否存在<br>DROP DATABASE [IF EXISTS] 数据库名称;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 不判断数据库是否存在，直接删除<br>DROP DATABASE 数据库名称;<br></code></pre></td></tr></table></figure><h1 id="卸载">卸载</h1><ul><li>在系统设置关闭 mysql</li><li>删除所有 mysql 文件即可</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ssh">sudo rm /usr/local/mysql<br>sudo rm -rf /usr/local/mysql*<br>sudo rm -rf /Library/StartupItems/MySQLCOM<br>sudo rm -rf /Library/PreferencePanes/My*<br>rm -rf ~/Library/PreferencePanes/My*<br>sudo rm -rf /Library/Receipts/mysql*<br>sudo rm -rf /Library/Receipts/MySQL*<br>sudo rm -rf /var/db/receipts/com.mysql.*<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>macos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
      <tag>macos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>macos之修改指定ip</title>
    <link href="/macos%E4%BF%AE%E6%94%B9%E6%8C%87%E5%AE%9Aip/"/>
    <url>/macos%E4%BF%AE%E6%94%B9%E6%8C%87%E5%AE%9Aip/</url>
    
    <content type="html"><![CDATA[<ul><li><p>1、打开访达</p></li><li><p>2、command➕shift➕G 搜索 /ect</p></li><li><p>3、在 ect 文件夹中找到 host 并复制一份在桌面上</p></li><li><p>4、修改桌面的 host 文件</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">本地IP 要修改指定的域名</span><br>192.168.0.132 issuse.com<br></code></pre></td></tr></table></figure><ul><li>5、覆盖 ect 文件夹中的 host 文件</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>macos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>macos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React之路由的使用</title>
    <link href="/React%E4%B9%8B%E8%B7%AF%E7%94%B1%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/React%E4%B9%8B%E8%B7%AF%E7%94%B1%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="配置">配置</h1><blockquote><p><a href="https://www.cnblogs.com/operate/p/16082907.html">ReactRouter(react-router-dom V6 整理)</a></p></blockquote><ul><li>安装 react-router-dom</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">npm i ract-router-dom<br></code></pre></td></tr></table></figure><ul><li>配置项目根目录的 index.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ReactDOM</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-dom/client&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">BrowserRouter</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./index.css&quot;</span>;<br><span class="hljs-keyword">import</span> reportWebVitals <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./reportWebVitals&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./routes&quot;</span>;<br><br><span class="hljs-keyword">const</span> root = <span class="hljs-title class_">ReactDOM</span>.<span class="hljs-title function_">createRoot</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>));<br>root.<span class="hljs-title function_">render</span>(<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">BrowserRouter</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">React.StrictMode</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">React.StrictMode</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">BrowserRouter</span>&gt;</span></span><br>);<br><br><span class="hljs-title function_">reportWebVitals</span>();<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202403011250515.png" /></p><ul><li>新建 routes/index.js 文件并配置</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Route</span>, <span class="hljs-title class_">Routes</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Bro</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Brother&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Home</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Home&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Father</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Index&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Son</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Son&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Test</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Test&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">MyRouter</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Routes</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Father&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/test&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Test&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/home&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Home&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/son&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Son&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/bro&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Bro&#125;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Routes</span>&gt;</span></span><br>  );<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">MyRouter</span>;<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202403011250513.png" /></p><h1 id="懒加载">懒加载</h1><blockquote><p><ahref="https://tsejx.github.io/react-guidebook/api-reference/react/suspense/">React.Suspense</a></p></blockquote><blockquote><p>[!note]懒加载顾名思义就是只有被用到的时候才会被加载页面，不消耗资源</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/routes&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ReactDOM</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-dom/client&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">BrowserRouter</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./index.css&quot;</span>;<br><span class="hljs-keyword">import</span> reportWebVitals <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./reportWebVitals&quot;</span>;<br><br><span class="hljs-keyword">const</span> root = <span class="hljs-title class_">ReactDOM</span>.<span class="hljs-title function_">createRoot</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>));<br>root.<span class="hljs-title function_">render</span>(<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">BrowserRouter</span>&gt;</span></span><br><span class="language-xml">    &#123;/* fallback中的内容可⾃定义 */&#125;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">React.Suspense</span> <span class="hljs-attr">fallback</span>=<span class="hljs-string">&#123;</span>&lt;<span class="hljs-attr">div</span>&gt;</span>Loading<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>&#125;&gt;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">React.Suspense</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">BrowserRouter</span>&gt;</span></span><br>);<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; lazy &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Route</span>, <span class="hljs-title class_">Routes</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Home</span> = <span class="hljs-title function_">lazy</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/Home&quot;</span>));<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Father</span> = <span class="hljs-title function_">lazy</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/Index&quot;</span>));<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Bro</span> = <span class="hljs-title function_">lazy</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/Brother&quot;</span>));<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Son</span> = <span class="hljs-title function_">lazy</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/Son&quot;</span>));<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Test</span> = <span class="hljs-title function_">lazy</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/Test&quot;</span>));<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">MyRouter</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-comment">// TODO：这里为什么要使用Component而不是Element</span><br>  <span class="hljs-comment">// TODO：懒加载又如何实现</span><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Routes</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Father&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/test&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Test&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/home&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Home&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/son&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Son&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/bro/:name&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Bro&#125;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Routes</span>&gt;</span></span><br>  );<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">MyRouter</span>;<br></code></pre></td></tr></table></figure><h1 id="跳转页面">跳转页面</h1><ul><li>前进</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useNavigate &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> navigate = <span class="hljs-title function_">useNavigate</span>();<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是Index页面<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      &#123;/* navigate(&#x27;/son&#x27;) =&gt; 前往路由为/son的页面 */&#125;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> navigate(&quot;/son&quot;)&#125;&gt;跳转到Son页面<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderIndex</span>;<br></code></pre></td></tr></table></figure><ul><li>前进带参数<ul><li>方法一：</li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useNavigate &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> navigate = <span class="hljs-title function_">useNavigate</span>();<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">goToBro</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">navigate</span>(<span class="hljs-string">&quot;/bro&quot;</span>, &#123; <span class="hljs-attr">state</span>: &#123; <span class="hljs-attr">username</span>: <span class="hljs-string">&quot;苏小妍&quot;</span> &#125; &#125;);<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是Index页面<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      &#123;/* navigate(&#x27;/son&#x27;) =&gt; 前往路由为/son的页面 */&#125;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> navigate(&quot;/son&quot;)&#125;&gt;跳转到Son页面<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> goToBro()&#125;&gt;跳转到Bro页面<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderIndex</span>;<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useEffect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; useLocation &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderBro</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> location = <span class="hljs-title function_">useLocation</span>();<br>  <span class="hljs-comment">// 获取传参</span><br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;useLocation=====&gt;&gt;&gt;&quot;</span>, location.<span class="hljs-property">state</span>.<span class="hljs-property">username</span>);<br>  &#125;, []);<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是Bro页面<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderBro</span>;<br></code></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Route</span>, <span class="hljs-title class_">Routes</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Bro</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Brother&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Home</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Home&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Father</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Index&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Son</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Son&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Test</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../views/Test&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">MyRouter</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Routes</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Father&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/test&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Test&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/home&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Home&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/son&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Son&#125;</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/bro/:name&quot;</span> <span class="hljs-attr">Component</span>=<span class="hljs-string">&#123;Bro&#125;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Routes</span>&gt;</span></span><br>  );<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">MyRouter</span>;<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useNavigate &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> navigate = <span class="hljs-title function_">useNavigate</span>();<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">goToBro</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">navigate</span>(<span class="hljs-string">&quot;/bro/苏小妍&quot;</span>);<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是Index页面<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      &#123;/* navigate(&#x27;/son&#x27;) =&gt; 前往路由为/son的页面 */&#125;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> navigate(&quot;/son&quot;)&#125;&gt;跳转到Son页面<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> goToBro()&#125;&gt;跳转到Bro页面<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderIndex</span>;<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useEffect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; useParams &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderBro</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> params = <span class="hljs-title function_">useParams</span>();<br>  <span class="hljs-comment">// 获取传参</span><br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;params=====&gt;&gt;&gt;&quot;</span>, params.<span class="hljs-property">name</span>);<br>  &#125;, []);<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是Bro页面<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderBro</span>;<br></code></pre></td></tr></table></figure><ul><li>返回</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useNavigate &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderSon</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> navigate = <span class="hljs-title function_">useNavigate</span>();<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是Son页面<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      &#123;/* navigate(-1) =&gt; 返回上一页 */&#125;</span><br><span class="language-xml">      &#123;/* 想返回几层就输入-多少 */&#125;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> navigate(-1)&#125;&gt;返回上一页<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderSon</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React之设置文件夹别名</title>
    <link href="/React%E4%B9%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E5%88%AB%E5%90%8D/"/>
    <url>/React%E4%B9%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E5%88%AB%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<p><a href="https://juejin.cn/post/7327500902109806629">前端开发小技巧 -【React】- 配置@别名路径 以及 路径联想</a></p><ul><li>安装 caro 工具包</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">npm i `@craco/craco -D<br></code></pre></td></tr></table></figure><ul><li>在项目根目录下 创建 craco.config.js 配置文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 从 node 中导入 内置的 path 模块</span><br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>);<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-comment">// webpack配置</span><br>  <span class="hljs-attr">webpack</span>: &#123;<br>    <span class="hljs-comment">// 配置别名</span><br>    <span class="hljs-attr">alias</span>: &#123;<br>      <span class="hljs-comment">// 约定使用 @ 表示 src 文件所在目录</span><br>      <span class="hljs-string">&quot;@&quot;</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&quot;src&quot;</span>),<br>    &#125;,<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li>修改 script 命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ssh">&quot;scripts&quot;: &#123;<br>&quot;start&quot;: &quot;craco start&quot;,<br>&quot;build&quot;: &quot;craco build&quot;,<br>&quot;test&quot;: &quot;craco test&quot;,<br>&quot;eject&quot;: &quot;craco eject&quot;<br>&#125;,<br></code></pre></td></tr></table></figure><ul><li>重启项目</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React之渲染HTML节点</title>
    <link href="/React%E4%B9%8B%E6%B8%B2%E6%9F%93HTML/"/>
    <url>/React%E4%B9%8B%E6%B8%B2%E6%9F%93HTML/</url>
    
    <content type="html"><![CDATA[<ul><li>获取 HTML 节点并存储</li><li>渲染</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-comment">// 假设这是获取到的HTML节点</span><br>  <span class="hljs-keyword">const</span> info =<br>    <span class="hljs-string">&#x27;&lt;div&gt;龚铱⽩真可爱&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color:pink&quot;&gt;龚铱⽩&lt;/span&gt;真可爱&lt;/div&gt;&lt;p&gt;段落1&lt;/p&gt;&lt;p&gt;段落2&lt;/p&gt;&#x27;</span>;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是Index页面<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      &#123;/* 渲染HTML节点 */&#125;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;detail&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">dangerouslySetInnerHTML</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">__html:</span> <span class="hljs-attr">info</span> || &quot;&quot; &#125;&#125;</span></span><br><span class="hljs-tag"><span class="language-xml">      /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderIndex</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React之组件通信</title>
    <link href="/React%E4%B9%8B%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/"/>
    <url>/React%E4%B9%8B%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="父传子">父传子</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-comment">// 导入组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">InputComponents</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./app&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> [inputVal, setInputVal] = <span class="hljs-title function_">useState</span>(<span class="hljs-string">&quot;&quot;</span>);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChangeValue</span> = (<span class="hljs-params">e</span>) =&gt; &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;e=====&gt;&gt;&gt;&quot;</span>, e);<br>    <span class="hljs-title function_">setInputVal</span>(e);<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">marginBottom:</span> <span class="hljs-attr">20</span> &#125;&#125;&gt;</span>&#123;inputVal&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      // 引入组件并传值</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">InputComponents</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;传input默认值&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">onChangeValue</span>=<span class="hljs-string">&#123;(e)</span> =&gt;</span> onChangeValue(e)&#125;</span><br><span class="language-xml">      /&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderIndex</span>;<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderApp</span> = (<span class="hljs-params">&#123; placeholder, value, onChangeValue &#125;</span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&#123;placeholder&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">onChange</span>=<span class="hljs-string">&#123;(e)</span> =&gt;</span> onChangeValue(e.target.value)&#125;</span><br><span class="language-xml">    /&gt;</span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderApp</span>;<br></code></pre></td></tr></table></figure><h1 id="子传父">子传父</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Child</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./app&quot;</span>;<br><span class="hljs-comment">// 父组件</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">ParentCom</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> [count, setCount] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br><br>  <span class="hljs-comment">// 获取子组件传过来的value值并设置到count，val参数就是子组件的value值</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">getChildrenValue</span> = (<span class="hljs-params">val</span>) =&gt; &#123;<br>    <span class="hljs-title function_">setCount</span>(val);<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>父组件<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>获取子组件传过来的值：&#123;count&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">      &#123;/* 这里是重要代码，向子组件传递getValue这个prop，它的值是一个回调函数 */&#125;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Child</span> <span class="hljs-attr">getValue</span>=<span class="hljs-string">&#123;getChildrenValue&#125;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">ParentCom</span>;<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-comment">// 子组件</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">ChildrenCom</span> = (<span class="hljs-params">props</span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> [value, setValue] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">addValue</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;props=====&gt;&gt;&gt;&quot;</span>, props);<br>    <span class="hljs-title function_">setValue</span>(value + <span class="hljs-number">1</span>);<br>    <span class="hljs-comment">// 向父组件传递每次递增的value值</span><br>    props.<span class="hljs-title function_">getValue</span>(value + <span class="hljs-number">1</span>);<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>子组件<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;addValue&#125;</span>&gt;</span>点击改变子组件的value值：&#123;value&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">ChildrenCom</span>;<br></code></pre></td></tr></table></figure><h1 id="兄弟组件">兄弟组件</h1><ul><li>在根目录创建 context/index 文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">PageWraperContext</span> = <span class="hljs-title class_">React</span>.<span class="hljs-title function_">createContext</span>(&#123;&#125;);<br></code></pre></td></tr></table></figure><ul><li>父组件</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">PageWraperContext</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;src/context&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Child1</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../Brother&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Child</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../Son&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">Father</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> [left, set_left] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">const</span> [right, setRight] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">renderChild</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">PageWraperContext.Provider</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">left</span>, <span class="hljs-attr">set_left</span>, <span class="hljs-attr">right</span>, <span class="hljs-attr">setRight</span> &#125;&#125;&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Child</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Child1</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">PageWraperContext.Provider</span>&gt;</span></span><br>    );<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>我的父组件<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">      &#123;renderChild()&#125;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Father</span>;<br></code></pre></td></tr></table></figure><ul><li>子组件 1</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">PageWraperContext</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/context&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useContext &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">Child</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> &#123; left, set_left &#125; = <span class="hljs-title function_">useContext</span>(<span class="hljs-title class_">PageWraperContext</span>);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">clickLeft</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">set_left</span>(left + <span class="hljs-number">1</span>);<br>  &#125;;<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderChild1</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;child1==&gt;left==&gt;&quot;</span>, left);<br>    <span class="hljs-keyword">return</span> (<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是子组件1:&#123;left&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;clickLeft&#125;</span>&gt;</span>点击left次数 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    );<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">RenderChild1</span>();<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Child</span>;<br></code></pre></td></tr></table></figure><ul><li>子组件 2</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">PageWraperContext</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/context&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useContext, useMemo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">Child</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> &#123; right, setRight &#125; = <span class="hljs-title function_">useContext</span>(<span class="hljs-title class_">PageWraperContext</span>);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">clickRight</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">setRight</span>(right + <span class="hljs-number">1</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;child1==&gt;right==&gt;&quot;</span>, right);<br>  &#125;;<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderChild2</span> = (<span class="hljs-params"></span>) =&gt;<br>    <span class="hljs-title function_">useMemo</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;child1==&gt;right==&gt;&quot;</span>, right);<br>      <span class="hljs-keyword">return</span> (<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是子组件2:&#123;right&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;clickRight&#125;</span>&gt;</span>点击Right次数 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>      );<br>    &#125;, [right]);<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">RenderChild2</span>();<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Child</span>;<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202403012025135.gif" /></p><h1 id="跨组件爷传孙组件">跨组件（爷传孙组件）</h1><ul><li>父组件</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">PageWraperContext</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/context&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Child</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../Son&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">Father</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> [left, set_left] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">const</span> [right, setRight] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">renderChild</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">PageWraperContext.Provider</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">left</span>, <span class="hljs-attr">set_left</span>, <span class="hljs-attr">right</span>, <span class="hljs-attr">setRight</span> &#125;&#125;&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Child</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">PageWraperContext.Provider</span>&gt;</span></span><br>    );<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>我的父组件<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">      &#123;renderChild()&#125;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Father</span>;<br></code></pre></td></tr></table></figure><ul><li>子组件</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Child1</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../Brother&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">Child</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">renderChild</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Child1</span> /&gt;</span></span>;<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>我的子组件<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">      &#123;renderChild()&#125;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Child</span>;<br></code></pre></td></tr></table></figure><ul><li>孙组件</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">PageWraperContext</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/context&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useContext, useMemo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">GrandSon</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> &#123; right, setRight &#125; = <span class="hljs-title function_">useContext</span>(<span class="hljs-title class_">PageWraperContext</span>);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">clickRight</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">setRight</span>(right + <span class="hljs-number">1</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;child1==&gt;right==&gt;&quot;</span>, right);<br>  &#125;;<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderChild2</span> = (<span class="hljs-params"></span>) =&gt;<br>    <span class="hljs-title function_">useMemo</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;child1==&gt;right==&gt;&quot;</span>, right);<br>      <span class="hljs-keyword">return</span> (<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是孙子组件:&#123;right&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;clickRight&#125;</span>&gt;</span>点击Right次数 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>      );<br>    &#125;, [right]);<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">RenderChild2</span>();<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">GrandSon</span>;<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202403012025133.gif" /></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React的生命周期</title>
    <link href="/React%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <url>/React%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://juejin.cn/post/6844903901620092941"># Hooks 与 React生命周期的关系</a> <a href="https://zhuanlan.zhihu.com/p/481678531">#react Hooks 与 React 生命周期的关系</a></p></blockquote><ul><li>useState：定义并初始化数据</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> [count, set_count] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handleCount</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">set_count</span>(count + <span class="hljs-number">1</span>);<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;count&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> handleCount()&#125;&gt;点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderIndex</span>;<br></code></pre></td></tr></table></figure><ul><li>useEffect：初始化页面 &amp; 监听数据</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useEffect, useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> [count, set_count] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;====================================&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;初始化页面&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;====================================&quot;</span>);<br>  &#125;, []);<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;count&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> handleCount()&#125;&gt;点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderIndex</span>;<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202403011824433.png" /></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useEffect, useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> [count, set_count] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;====================================&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;初始化页面&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;====================================&quot;</span>);<br>  &#125;, []);<br><br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;count&quot;</span>, count);<br>  &#125;, [count]);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handleCount</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">set_count</span>(count + <span class="hljs-number">1</span>);<br>  &#125;;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;count&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> handleCount()&#125;&gt;点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">RenderIndex</span>;<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202403012025136.gif" /></p><ul><li>useRef：获取 dom 节点</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; useEffect, useRef, useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br><span class="hljs-keyword">const</span> [count, set_count] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-comment">// 获取真实dom节点</span><br><span class="hljs-keyword">const</span> domRef = <span class="hljs-title function_">useRef</span>(<span class="hljs-literal">null</span>);<br><br><span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;====================================&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;初始化页面&#x27;</span>, domRef);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;====================================&#x27;</span>);<br>&#125;, []);<br><br><span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;count&#x27;</span>, count);<br>&#125;, [count]);<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleCount</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br><span class="hljs-title function_">set_count</span>(count + <span class="hljs-number">1</span>);<br>&#125;;<br><span class="hljs-keyword">return</span> (<br><span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">marginBottom:</span> <span class="hljs-attr">20</span>, <span class="hljs-attr">color:</span> &#x27;<span class="hljs-attr">pink</span>&#x27; &#125;&#125; <span class="hljs-attr">ref</span>=<span class="hljs-string">&#123;domRef&#125;</span>&gt;</span></span><br><span class="language-xml">&#123;count&#125;</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> handleCount()&#125;&gt;点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/&gt;</span></span><br>);<br>&#125;;<br><br><span class="hljs-keyword">export</span> defaul~~t <span class="hljs-title class_">RenderIndex</span>;<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202403011824430.png" /></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React之使用Scss</title>
    <link href="/React%E4%B9%8B%E4%BD%BF%E7%94%A8Scss/"/>
    <url>/React%E4%B9%8B%E4%BD%BF%E7%94%A8Scss/</url>
    
    <content type="html"><![CDATA[<blockquote><p><ahref="https://blog.csdn.net/ZYS10000/article/details/121622434">Scss基本使用（变量、嵌套）</a></p></blockquote><ul><li>安装 node-sass</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">npm i node-sass -D<br></code></pre></td></tr></table></figure><ul><li>创建文件夹并新建一个 xx.scss 的文件</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.container</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#afa407</span>;<br>  <span class="hljs-selector-class">.text</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#880ae8</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在同个文件夹目录下使用 xx.scss 文件</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">PageWraperContext</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/context&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useContext, useMemo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./index.scss&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">GrandSon</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> &#123; right, setRight &#125; = <span class="hljs-title function_">useContext</span>(<span class="hljs-title class_">PageWraperContext</span>);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">clickRight</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">setRight</span>(right + <span class="hljs-number">1</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;child1==&gt;right==&gt;&quot;</span>, right);<br>  &#125;;<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">RenderChild2</span> = (<span class="hljs-params"></span>) =&gt;<br>    <span class="hljs-title function_">useMemo</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;child1==&gt;right==&gt;&quot;</span>, right);<br>      <span class="hljs-keyword">return</span> (<br>        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span>我是孙子组件:&#123;right&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;clickRight&#125;</span>&gt;</span>点击Right次数 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>      );<br>    &#125;, [right]);<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">RenderChild2</span>();<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">GrandSon</span>;<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202403012052547.png" /></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React的安装</title>
    <link href="/React%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <url>/React%E7%9A%84%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://zh-hans.react.dev/">React 教程</a></p></blockquote><h1 id="安装环境">1、安装环境</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">npm install -g create-react-app<br></code></pre></td></tr></table></figure><h1 id="查看脚手架版本号">2、查看脚手架版本号</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">create-react-app -V / create-react-app -version<br></code></pre></td></tr></table></figure><ul><li>未安装成功 / 未安装会展示 <imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202402281756266.png" /></li><li>安装成功会展示版本号 <imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202402281756268.png" /></li></ul><h1 id="创建应用">3、创建应用</h1><ul><li>安装全局环境</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">create-react-app 项目名<br></code></pre></td></tr></table></figure><ul><li>未安装全局环境</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">npx create-react-app 项目名<br></code></pre></td></tr></table></figure><ul><li>创建 typescript 项目</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">npx create-react-app 项目名 --template typescript<br></code></pre></td></tr></table></figure><h1 id="使用">4、使用</h1><ul><li><a href="/React%E4%B9%8B%E4%BD%BF%E7%94%A8Scss/" title="React之使用Scss">React之使用Scss</a></li><li><a href="/React%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/" title="React的生命周期">React的生命周期</a></li><li><a href="/React%E4%B9%8B%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/" title="React之组件通信">React之组件通信</a></li><li><a href="/React%E4%B9%8B%E8%B7%AF%E7%94%B1%E7%9A%84%E4%BD%BF%E7%94%A8/" title="React之路由的使用">React之路由的使用</a></li><li><a href="/React%E4%B9%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E5%88%AB%E5%90%8D/" title="React之设置文件夹别名">React之设置文件夹别名</a></li><li><a href="/React%E4%B9%8B%E6%B8%B2%E6%9F%93HTML/" title="React之渲染HTML节点">React之渲染HTML节点</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js之String的使用</title>
    <link href="/String/"/>
    <url>/String/</url>
    
    <content type="html"><![CDATA[<h1 id="字符串截取">字符串截取</h1><ul><li>str.sclice(startIndex,[endIndex]) <spanclass="math inline">\(\Rightarrow\)</span> 返回一个新的startIndex~endIndex 之间的字符串</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sliceString</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">let</span> string = <span class="hljs-string">&quot;helloWorld&quot;</span>;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;slice==&gt;&quot;</span>, string.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>)); <span class="hljs-comment">// hello</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;slice==&gt;&quot;</span>, string.<span class="hljs-title function_">slice</span>(-<span class="hljs-number">2</span>, <span class="hljs-number">5</span>)); <span class="hljs-comment">// 无输出</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;slice==&gt;&quot;</span>, string.<span class="hljs-title function_">slice</span>(-<span class="hljs-number">2</span>)); <span class="hljs-comment">// ld</span><br>&#125;<br><span class="hljs-comment">// 运行sliceString()方法</span><br><span class="hljs-title function_">sliceString</span>();<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240222180500.png"alt="splice" /><figcaption aria-hidden="true">splice</figcaption></figure><ul><li>str.substring(startIndex,[endIndex]) <spanclass="math inline">\(\Rightarrow\)</span> 返回⼀个新的startIndex~endIndex 之间的字符串 &gt; [!note] &gt; 当 startIndex为负值时，把所有负值置为 0</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sliceString</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">let</span> string = <span class="hljs-string">&#x27;helloWorld&#x27;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;substring==&gt;&#x27;</span>, string.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>)); <span class="hljs-comment">// hello</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;substring==&gt;&#x27;</span>, string.<span class="hljs-title function_">substring</span>(-<span class="hljs-number">4</span>)); <span class="hljs-comment">// helloWorld</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;substring==&gt;&#x27;</span>, string.<span class="hljs-title function_">substring</span>(-<span class="hljs-number">4</span>, <span class="hljs-number">5</span>)); <span class="hljs-comment">// hello</span><br> <span class="hljs-string">&quot;orld&quot;</span>]<br>&#125;<br><br><span class="hljs-title function_">sliceString</span>();<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240222180601.png"alt="substring" /><figcaption aria-hidden="true">substring</figcaption></figure><ul><li>str.split(xxx) <span class="math inline">\(\Rightarrow\)</span> 以xxx 为条件参数，返回⼀个全新的字符串不包含 xxx 这个参数 &gt; [!note]&gt; 也可以理解成⽤ xxx 这个参数对字符串进⾏⼀个分割</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sliceString</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">let</span> string = <span class="hljs-string">&quot;hello World&quot;</span>;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;split==&gt;&quot;</span>, string.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;W&quot;</span>)); <span class="hljs-comment">// [&quot;hello&quot;, &quot;orld&quot;]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;split==&gt;&quot;</span>, string.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>)); <span class="hljs-comment">// [&quot;hello&quot;, &quot;World&quot;]</span><br>&#125;<br><br><span class="hljs-title function_">sliceString</span>();<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240222180832.png"alt="split" /><figcaption aria-hidden="true">split</figcaption></figure><h1 id="字符串大小写">字符串大小写</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">allUpperCase</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> string = <span class="hljs-string">&quot; hello Word &quot;</span>;<br>  <span class="hljs-comment">// HELLO WORD</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;s&quot;</span>, string.<span class="hljs-title function_">toUpperCase</span>());<br>  <span class="hljs-comment">// hello word</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;s&quot;</span>, string.<span class="hljs-title function_">toLowerCase</span>());<br>&#125;<br><span class="hljs-title function_">toLowerCase</span>();<br></code></pre></td></tr></table></figure><h1 id="字符串去空格">字符串去空格</h1><ul><li>str.trimStart() <span class="math inline">\(\Rightarrow\)</span>去除头部空格</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">trimStartString</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> string = <span class="hljs-string">&quot; hello Word &quot;</span>;<br>  <span class="hljs-comment">// hello Word</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;trimStart==&gt;&quot;</span>, string.<span class="hljs-title function_">trimStart</span>());<br>&#125;<br><span class="hljs-title function_">trimStartString</span>();<br></code></pre></td></tr></table></figure><ul><li>str.trim() <span class="math inline">\(\Rightarrow\)</span>去除两端空格</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">trimString</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> string = <span class="hljs-string">&quot; hello Word &quot;</span>;<br>  <span class="hljs-comment">// hello Word</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;trimStart==&gt;&quot;</span>, string.<span class="hljs-title function_">trim</span>());<br>&#125;<br><span class="hljs-title function_">trimString</span>();<br></code></pre></td></tr></table></figure><ul><li>str.trimEnd() <span class="math inline">\(\Rightarrow\)</span>去除尾部空格</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">trimEndString</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> string = <span class="hljs-string">&quot; hello Word&quot;</span>;<br>  <span class="hljs-comment">//  hello Word</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;trimStart==&gt;&quot;</span>, string.<span class="hljs-title function_">trimEnd</span>());<br>&#125;<br><span class="hljs-title function_">trimEndString</span>();<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240222154327.png"alt="trim" /><figcaption aria-hidden="true">trim</figcaption></figure><h1id="判断是否包含某个字符串查找元素">判断是否包含某个字符串(查找元素)</h1><ul><li>str.includes(val) <span class="math inline">\(\Rightarrow\)</span>判断是否包含 val 这个值</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isContainString</span>(<span class="hljs-params">str, value</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;includes==&gt;&quot;</span>, str.<span class="hljs-title function_">includes</span>(value));<br>&#125;<br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;s&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>str.charAt(val) <span class="math inline">\(\Rightarrow\)</span>根据索引输出对应的值 &gt; [!note] &gt; val 必须是正整数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isContainString</span>(<span class="hljs-params">str, value</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;charAt==&gt;&quot;</span>, str.<span class="hljs-title function_">charAt</span>(value));<br>&#125;<br><span class="hljs-comment">// h</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>);<br><span class="hljs-comment">// l</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-number">3</span>);<br><span class="hljs-comment">//</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, -<span class="hljs-number">3</span>);<br></code></pre></td></tr></table></figure><ul><li>str.idexOf(val) <span class="math inline">\(\Rightarrow\)</span>根据 val 查找字符串第⼀个匹配索引 &gt; [!note] &gt; val必须是字符串,有值为当前搜索值的第⼀个的索引;⽆值为-1</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isContainString</span>(<span class="hljs-params">str, value</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;indexOf==&gt;&quot;</span>, str.<span class="hljs-title function_">indexOf</span>(value));<br>&#125;<br><span class="hljs-comment">// 4</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>);<br><span class="hljs-comment">// 0</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>);<br><span class="hljs-comment">// -1</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-regexp">/[^\w\s]/g</span>);<br></code></pre></td></tr></table></figure><ul><li>lastIndexOf(val) <span class="math inline">\(\Rightarrow\)</span>根据字符串获取最后一个索引 &gt; [!note] &gt;参数必须为字符串，有值为当前搜索值的最后一个的索引;无值为-1</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isContainString</span>(<span class="hljs-params">str, value</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;lastIndexOf==&gt;&quot;</span>, str.<span class="hljs-title function_">lastIndexOf</span>(value));<br>&#125;<br><span class="hljs-comment">// 7</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>);<br><span class="hljs-comment">// 0</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>);<br><span class="hljs-comment">// 17</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app222&quot;</span>, <span class="hljs-number">2</span>);<br><span class="hljs-comment">// -1</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app222&quot;</span>, <span class="hljs-number">3</span>);<br></code></pre></td></tr></table></figure><ul><li>search() <span class="math inline">\(\Rightarrow\)</span>根据字符串获取第一个索引 &gt; [!note] &gt; 参数可为正则或是字符串</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isContainString</span>(<span class="hljs-params">str, value</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;search==&gt;&quot;</span>, str.<span class="hljs-title function_">search</span>(value));<br>&#125;<br><span class="hljs-comment">// 4</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>);<br><span class="hljs-comment">// 0</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>);<br><span class="hljs-comment">// -1</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-number">2</span>);<br><span class="hljs-comment">// 1</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-regexp">/[^\h\s]/g</span>);<br></code></pre></td></tr></table></figure><ul><li>startsWith() <span class="math inline">\(\Rightarrow\)</span>判断开头是否包含某个字符串,正确为 true，错误为 false</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isContainString</span>(<span class="hljs-params">str, value</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;startsWith==&gt;&quot;</span>, str.<span class="hljs-title function_">startsWith</span>(value));<br>&#125;<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>);<br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-number">2</span>);<br></code></pre></td></tr></table></figure><ul><li>endsWith() <span class="math inline">\(\Rightarrow\)</span>判断结尾是否包含某个字符串,正确为 true，错误为 false</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isContainString</span>(<span class="hljs-params">str, value</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;endsWith$Rightarrow$ &quot;</span>, str.<span class="hljs-title function_">endsWith</span>(<span class="hljs-string">&quot;app&quot;</span>)); <span class="hljs-comment">// false</span><br>&#125;<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-number">2</span>);<br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>);<br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;p&quot;</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isContainString</span>(<span class="hljs-string">&quot;hello world app&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>);<br></code></pre></td></tr></table></figure><h1 id="拷字符串">拷⻉字符串</h1><ul><li>str.repeat(n) <span class="math inline">\(\Rightarrow\)</span> 把str 这个字符串重复 n 次,n 代表重复的次数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealString</span> = (<span class="hljs-params">value</span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> string = <span class="hljs-string">&quot;hello app!&quot;</span>;<br>  <span class="hljs-comment">// hello app!hello app!hello app!</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;repeat==&gt;&quot;</span>, string.<span class="hljs-title function_">repeat</span>());<br>&#125;;<br><br><span class="hljs-title function_">dealString</span>(<span class="hljs-number">2</span>);<br></code></pre></td></tr></table></figure><h1 id="替换字符串">替换字符串</h1><ul><li>str.replace(oldVal,newVal) <spanclass="math inline">\(\Rightarrow\)</span> 把 newVal 替换成 oldVal</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealString</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> string = <span class="hljs-string">&quot;hello app!&quot;</span>;<br>  <span class="hljs-comment">// hello world!</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;replace==&gt;&quot;</span>, string.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;world&quot;</span>));<br>&#125;;<br><br><span class="hljs-title function_">dealString</span>();<br></code></pre></td></tr></table></figure><h1 id="链接字符串">链接字符串</h1><ul><li>str.concat(str1,[str2,...]) <spanclass="math inline">\(\Rightarrow\)</span>将⼀个或多个字符串与原字符串连接合并，形成⼀个新的字符串并返 回</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealString</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> string = <span class="hljs-string">&quot;hello app!&quot;</span>;<br>  <span class="hljs-keyword">const</span> a = <span class="hljs-string">&quot;world&quot;</span>;<br>  <span class="hljs-comment">// hello app!world</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;concat==&gt;&quot;</span>, string.<span class="hljs-title function_">concat</span>(a));<br>&#125;;<br><br><span class="hljs-title function_">dealString</span>();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>javaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js之Object的使用</title>
    <link href="/Object/"/>
    <url>/Object/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>浅拷贝：会改变原有数据<br/> 深拷贝：不会改变原有数据</p>          </div><ul><li>Object.assign(obj, obj1) <spanclass="math inline">\(\Rightarrow\)</span>合并两个对象为一个<strong><spanclass="label label-info">==（此方法为浅拷贝）==</span></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealObj</span> = (<span class="hljs-params">val</span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> obj = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;苏小妍&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">13</span> &#125;;<br>  <span class="hljs-keyword">let</span> obj1 = &#123; <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span> &#125;;<br>  obj1 = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(obj, obj1);<br>  <span class="hljs-comment">// obj=====&gt;&gt;&gt; &#123; name: &#x27;苏小妍&#x27;, age: 13, sex: &#x27;女&#x27; &#125;</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;obj=====&gt;&gt;&gt;&quot;</span>, obj);<br>  <span class="hljs-comment">// obj=====&gt;&gt;&gt; &#123; name: &#x27;苏小妍&#x27;, age: 13, sex: &#x27;女&#x27; &#125;</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;obj1=====&gt;&gt;&gt;&quot;</span>, obj1);<br>&#125;;<br><br><span class="hljs-title function_">dealObj</span>();<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240223113335.png"alt="这是图片" /><figcaption aria-hidden="true">这是图片</figcaption></figure><ul><li>Object.hasOwnProperty() <spanclass="math inline">\(\Rightarrow\)</span> 判断对象是否包含某个 key</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">hasOwnPropertyObj</span> = (<span class="hljs-params">val</span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> obj = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;苏小妍&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">13</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span>, <span class="hljs-attr">job</span>: <span class="hljs-string">&quot;student&quot;</span> &#125;;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;hasOwnProperty=====&gt;&gt;&gt;&quot;</span>, obj.<span class="hljs-title function_">hasOwnProperty</span>(val));<br>&#125;;<br><br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">hasOwnPropertyObj</span>(<span class="hljs-string">&quot;name&quot;</span>);<br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">hasOwnPropertyObj</span>(<span class="hljs-string">&quot;sex&quot;</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">hasOwnPropertyObj</span>(<span class="hljs-string">&quot;work&quot;</span>);<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240226154912.png" /></p><ul><li>Object.keys() <span class="math inline">\(\Rightarrow\)</span>获取对象的所有 key</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">objectKeys</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> obj = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;苏小妍&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">13</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span>, <span class="hljs-attr">job</span>: <span class="hljs-string">&quot;student&quot;</span> &#125;;<br>  <span class="hljs-comment">// [ &#x27;name&#x27;, &#x27;age&#x27;, &#x27;sex&#x27;, &#x27;job&#x27; ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;objectKeys=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(obj));<br>&#125;;<br><br><span class="hljs-title function_">objectKeys</span>();<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240226104628.png" /></p><ul><li>Object.values() <span class="math inline">\(\Rightarrow\)</span>获取对象的所有 value</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">objectValues</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> obj = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;苏小妍&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">13</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span>, <span class="hljs-attr">job</span>: <span class="hljs-string">&quot;student&quot;</span> &#125;;<br>  <span class="hljs-comment">// [ &#x27;苏小妍&#x27;, 13, &#x27;女&#x27;, &#x27;student&#x27; ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;objectValues=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">values</span>(obj));<br>&#125;;<br><span class="hljs-title function_">objectValues</span>();<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240226104959.png" /></p><ul><li>Object.entries() <span class="math inline">\(\Rightarrow\)</span>获取对象的所有 key 和所有 value</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">objectEntries</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> obj = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;苏小妍&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">13</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span>, <span class="hljs-attr">job</span>: <span class="hljs-string">&quot;student&quot;</span> &#125;;<br>  <span class="hljs-comment">// [ &#x27;name&#x27;, &#x27;苏小妍&#x27; ],</span><br>  <span class="hljs-comment">// [&#x27;age&#x27;, 13],</span><br>  <span class="hljs-comment">// [&#x27;sex&#x27;, &#x27;女&#x27;],</span><br>  <span class="hljs-comment">// [&#x27;job&#x27;, &#x27;student&#x27;];</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;objectEntries=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">entries</span>(obj));<br>&#125;;<br><span class="hljs-title function_">objectEntries</span>();<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240226105023.png" /></p><ul><li>判断数据类型</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fruitsArr = [<br>  <span class="hljs-string">&quot;Banana&quot;</span>,<br>  <span class="hljs-string">&quot;Cherry&quot;</span>,<br>  <span class="hljs-string">&quot;Peach&quot;</span>,<br>  <span class="hljs-string">&quot;Kiwi&quot;</span>,<br>  <span class="hljs-string">&quot;Leamon&quot;</span>,<br>  <span class="hljs-string">&quot;Watermelon&quot;</span>,<br>  <span class="hljs-string">&quot;Strawberry&quot;</span>,<br>  <span class="hljs-string">&quot;Orange&quot;</span>,<br>  <span class="hljs-string">&quot;Apple&quot;</span>,<br>  <span class="hljs-string">&quot;Mango&quot;</span>,<br>  <span class="hljs-string">&quot;Banana&quot;</span>,<br>];<br><br><span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>.<span class="hljs-title function_">call</span>(fruitsArr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;-&quot;</span>)); <span class="hljs-comment">// [object String]</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>.<span class="hljs-title function_">call</span>(fruitsArr); <span class="hljs-comment">// [object Array]</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>javaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js之Number的使用</title>
    <link href="/Number/"/>
    <url>/Number/</url>
    
    <content type="html"><![CDATA[<ul><li>Number.isFinite(val) <spanclass="math inline">\(\Rightarrow\)</span> 检测指定参数是否为无穷大</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">isFiniteNumber</span> = (<span class="hljs-params">val</span>) =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;isFiniteNumber=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Number</span>.<span class="hljs-built_in">isFinite</span>(val));<br>&#125;;<br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">isFiniteNumber</span>(<span class="hljs-number">30</span>);<br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">isFiniteNumber</span>(<span class="hljs-number">30.05</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isFiniteNumber</span>(<span class="hljs-number">1</span> / <span class="hljs-number">0</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isFiniteNumber</span>(<span class="hljs-string">&quot;sasa&quot;</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">isFiniteNumber</span>(<span class="hljs-literal">true</span>);<br></code></pre></td></tr></table></figure><ul><li>Number.isInteger(val) <spanclass="math inline">\(\Rightarrow\)</span> 判断传入值是否为整数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">numberIsInteger</span>(<span class="hljs-params">val</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numberIsInteger=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Number</span>.<span class="hljs-title function_">isInteger</span>(val));<br>&#125;<br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">numberIsInteger</span>(<span class="hljs-number">20</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">numberIsInteger</span>(<span class="hljs-number">20.05</span>);<br><span class="hljs-comment">// true</span><br><span class="hljs-title function_">numberIsInteger</span>(-<span class="hljs-number">20</span>);<br><span class="hljs-comment">// false</span><br><span class="hljs-title function_">numberIsInteger</span>(<span class="hljs-string">&quot;20&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>Number.isNaN(val) <spanclass="math inline">\(\Rightarrow\)</span></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br></code></pre></td></tr></table></figure><ul><li>Number.parseInt(val) <spanclass="math inline">\(\Rightarrow\)</span> 参数 val 转 int 类型</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">numberParseInt</span> = (<span class="hljs-params">val</span>) =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numberParseInt=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Number</span>.<span class="hljs-built_in">parseInt</span>(val));<br>&#125;;<br><br><span class="hljs-comment">// 20</span><br><span class="hljs-title function_">numberParseInt</span>(<span class="hljs-number">20</span>);<br><span class="hljs-comment">// 20</span><br><span class="hljs-title function_">numberParseInt</span>(<span class="hljs-number">20.05</span>);<br><span class="hljs-comment">// 20</span><br><span class="hljs-title function_">numberParseInt</span>(<span class="hljs-number">20.56</span>);<br><span class="hljs-comment">// 102</span><br><span class="hljs-title function_">numberParseInt</span>(<span class="hljs-string">&quot;102.56&quot;</span>);<br><span class="hljs-comment">// -30</span><br><span class="hljs-title function_">numberParseInt</span>(<span class="hljs-string">&quot;-30.66&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>Number.# parseFloat(val) <spanclass="math inline">\(\Rightarrow\)</span> 参数 val 转浮点类型</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">numberParseFloat</span> = (<span class="hljs-params">val</span>) =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numberParseFloat=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Number</span>.<span class="hljs-built_in">parseFloat</span>(val));<br>&#125;;<br><br><span class="hljs-comment">// 20</span><br><span class="hljs-title function_">numberParseFloat</span>(<span class="hljs-number">20</span>);<br><span class="hljs-comment">// 20.05</span><br><span class="hljs-title function_">numberParseFloat</span>(<span class="hljs-number">20.05</span>);<br><span class="hljs-comment">// 20.56785215950548</span><br><span class="hljs-title function_">numberParseFloat</span>(<span class="hljs-number">20.567852159505482586259</span>);<br><span class="hljs-comment">// 102.56</span><br><span class="hljs-title function_">numberParseFloat</span>(<span class="hljs-string">&quot;102.56&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>number.toFixed(val) <span class="math inline">\(\Rightarrow\)</span>数字转换为字符串后去四舍五入至指定的小数位数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">numberToFixed</span>(<span class="hljs-params">num, val</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numberToFixed=====&gt;&gt;&gt;&quot;</span>, num.<span class="hljs-title function_">toFixed</span>(val));<br>&#125;<br><br><span class="hljs-comment">// 12.12</span><br><span class="hljs-title function_">numberToFixed</span>(<span class="hljs-number">12.1234567890123</span>, <span class="hljs-number">2</span>);<br><span class="hljs-comment">// 12.13</span><br><span class="hljs-title function_">numberToFixed</span>(<span class="hljs-number">12.12654231452</span>, <span class="hljs-number">2</span>);<br><span class="hljs-comment">// 12.127</span><br><span class="hljs-title function_">numberToFixed</span>(<span class="hljs-number">12.12654231452</span>, <span class="hljs-number">3</span>);<br></code></pre></td></tr></table></figure><ul><li>number.toPrecision(val) <spanclass="math inline">\(\Rightarrow\)</span> 返回指定长度的数字</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">numberToPrecision</span>(<span class="hljs-params">num, val</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numberToPrecision=====&gt;&gt;&gt;&quot;</span>, num.<span class="hljs-title function_">toPrecision</span>(val));<br>&#125;<br><br><span class="hljs-comment">// 12</span><br><span class="hljs-title function_">numberToPrecision</span>(<span class="hljs-number">12.1234567890123</span>, <span class="hljs-number">2</span>);<br><span class="hljs-comment">// 12.127</span><br><span class="hljs-title function_">numberToPrecision</span>(<span class="hljs-number">12.12654231452</span>, <span class="hljs-number">5</span>);<br><span class="hljs-comment">// 12.1</span><br><span class="hljs-title function_">numberToPrecision</span>(<span class="hljs-number">12.12654231452</span>, <span class="hljs-number">3</span>);<br></code></pre></td></tr></table></figure><ul><li>number.toString(val) <spanclass="math inline">\(\Rightarrow\)</span> 数字转字符串</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">numberToString</span>(<span class="hljs-params">num</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numberToString=====&gt;&gt;&gt;&quot;</span>, num.<span class="hljs-title function_">toString</span>());<br>&#125;<br><br><span class="hljs-comment">// &quot;12.1234567890123&quot;</span><br><span class="hljs-title function_">numberToString</span>(<span class="hljs-number">12.1234567890123</span>);<br><span class="hljs-comment">// &quot;12.1234567890123&quot;</span><br><span class="hljs-title function_">numberToString</span>(<span class="hljs-string">&quot;12.1234567890123&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>number.valueOf() <span class="math inline">\(\Rightarrow\)</span>数字转字符串</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">numberValueOf</span>(<span class="hljs-params">num</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numberValueOf=====&gt;&gt;&gt;&quot;</span>, num.<span class="hljs-title function_">valueOf</span>());<br>&#125;<br><br><span class="hljs-comment">// 12.1234567890123</span><br><span class="hljs-title function_">numberValueOf</span>(<span class="hljs-number">12.1234567890123</span>);<br><span class="hljs-comment">// 12.1234567890123</span><br><span class="hljs-title function_">numberValueOf</span>(<span class="hljs-string">&quot;12.1234567890123&quot;</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>javaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js之Array的使用</title>
    <link href="/Array/"/>
    <url>/Array/</url>
    
    <content type="html"><![CDATA[<h1 id="基础">基础</h1><ul><li>array.concat(arr1) <span class="math inline">\(\Rightarrow\)</span>连接两个或多个数组，并返回已连接数组的副本</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">arrConcat</span> = (<span class="hljs-params">arr, arr1</span>) =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arrConcat=====&gt;&gt;&gt;&quot;</span>, arr.<span class="hljs-title function_">concat</span>(arr1));<br>&#125;;<br><span class="hljs-comment">// [ &#x27;apple&#x27;, &#x27;banana&#x27;, &#x27;pears&#x27; ]</span><br><span class="hljs-title function_">arrConcat</span>([<span class="hljs-string">&quot;apple&quot;</span>, <span class="hljs-string">&quot;banana&quot;</span>], [<span class="hljs-string">&quot;pears&quot;</span>]);<br></code></pre></td></tr></table></figure><ul><li>array.copyWithin(num1,num2)：将数组中的数组元素复制到指定位置或从指定位置复制</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">copyWithinArray</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruits = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>];<br>  <span class="hljs-comment">// [ &#x27;Banana&#x27;, &#x27;Orange&#x27;, &#x27;Apple&#x27;, &#x27;Orange&#x27; ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arrConcat=====&gt;&gt;&gt;&quot;</span>, fruits.<span class="hljs-title function_">copyWithin</span>(<span class="hljs-number">3</span>, <span class="hljs-number">1</span>));<br>&#125;;<br><br><span class="hljs-title function_">copyWithinArray</span>();<br></code></pre></td></tr></table></figure><ul><li>array.fill(修改的数据，开始索引，结束索引)：填充数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">fillArr</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> milkArr = [<span class="hljs-string">&quot;蒙牛&quot;</span>, <span class="hljs-string">&quot;娃哈哈&quot;</span>, <span class="hljs-string">&quot;AD钙奶&quot;</span>, <span class="hljs-string">&quot;优酸乳&quot;</span>, <span class="hljs-string">&quot;伊利&quot;</span>];<br>  <span class="hljs-comment">// [ &#x27;蒙牛&#x27;, &#x27;娃哈哈&#x27;, &#x27;AD钙奶&#x27;, &#x27;优酸乳&#x27;, &#x27;伊利&#x27; ]</span><br>  milkArr.<span class="hljs-title function_">fill</span>(<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br>  <span class="hljs-comment">// [ &#x27;蒙牛&#x27;, &#x27;娃哈哈&#x27;, &#x27;Kiwi&#x27;, &#x27;优酸乳&#x27;, &#x27;伊利&#x27; ]</span><br>  milkArr.<span class="hljs-title function_">fill</span>(<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>);<br>  <span class="hljs-comment">// [ &#x27;蒙牛&#x27;, &#x27;娃哈哈&#x27;, &#x27;Kiwi&#x27;, &#x27;Kiwi&#x27;, &#x27;伊利&#x27; ]</span><br>  milkArr.<span class="hljs-title function_">fill</span>(<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>);<br>  <span class="hljs-comment">// [ &#x27;蒙牛&#x27;, &#x27;娃哈哈&#x27;, &#x27;Kiwi&#x27;, &#x27;Kiwi&#x27;, &#x27;Kiwi&#x27; ]</span><br>  milkArr.<span class="hljs-title function_">fill</span>(<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>);<br>  <span class="hljs-comment">// [ &#x27;蒙牛&#x27;, &#x27;娃哈哈&#x27;, &#x27;Kiwi&#x27;, &#x27;Kiwi&#x27;, &#x27;Kiwi&#x27; ]</span><br>  milkArr.<span class="hljs-title function_">fill</span>(<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(milkArr);<br>&#125;;<br><span class="hljs-title function_">filterArr</span>();<br></code></pre></td></tr></table></figure><ul><li>Array.from(转为数组的对象)创建数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">arrayFrom</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-comment">// [&#x27;f&#x27;, &#x27;o&#x27;, &#x27;o&#x27;, &#x27;d&#x27;]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(<span class="hljs-string">&quot;food&quot;</span>));<br>  <span class="hljs-comment">// [2, 4, 6, 8]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], <span class="hljs-function">(<span class="hljs-params">x</span>) =&gt;</span> x + x));<br>  <span class="hljs-comment">// [0, 1, 2, 3, 4, 5, 6]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(&#123; <span class="hljs-attr">length</span>: <span class="hljs-number">7</span> &#125;, <span class="hljs-function">(<span class="hljs-params">v, i</span>) =&gt;</span> i));<br>&#125;;<br><span class="hljs-title function_">arrayFrom</span>();<br></code></pre></td></tr></table></figure><ul><li>array.join(链接条件)：将数组合并成字符串</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">arrayJoin</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<br>    <span class="hljs-string">&quot;Banana&quot;</span>,<br>    <span class="hljs-string">&quot;Cherry&quot;</span>,<br>    <span class="hljs-string">&quot;Peach&quot;</span>,<br>    <span class="hljs-string">&quot;Kiwi&quot;</span>,<br>    <span class="hljs-string">&quot;Leamon&quot;</span>,<br>    <span class="hljs-string">&quot;Watermelon&quot;</span>,<br>    <span class="hljs-string">&quot;Strawberry&quot;</span>,<br>    <span class="hljs-string">&quot;Orange&quot;</span>,<br>    <span class="hljs-string">&quot;Apple&quot;</span>,<br>    <span class="hljs-string">&quot;Mango&quot;</span>,<br>    <span class="hljs-string">&quot;Banana&quot;</span>,<br>  ];<br>  <span class="hljs-comment">// Banana-Cherry-Peach-Kiwi-Leamon-Watermelon-Strawberry-Orange-Apple-Mango-Banana</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruitsArr=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;-&quot;</span>));<br>  <span class="hljs-comment">// Banana And Cherry And Peach And Kiwi And Leamon And Watermelon And Strawberry And Orange And Apple And Mango And Banana</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruitsArr=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot; And &quot;</span>));<br>  <span class="hljs-comment">// Banana Cherry Peach Kiwi Leamon Watermelon Strawberry Orange Apple Mango Banana</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruitsArr=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot; &quot;</span>));<br>  <span class="hljs-comment">// Banana / Cherry / Peach / Kiwi / Leamon / Watermelon / Strawberry / Orange / Apple / Mango / Banana</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruitsArr=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot; / &quot;</span>));<br>&#125;<br><span class="hljs-title function_">arrayJoin</span>();<br></code></pre></td></tr></table></figure><ul><li>array.toString()：转为字符串</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">ArrayToString</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>];<br>  <span class="hljs-comment">// Banana,Orange,Apple,Mango</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruitsAr1r=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">toString</span>());<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li>Array.isArray(arr)：arr 是否为数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isArray</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Cherry&quot;</span>, <span class="hljs-string">&quot;Peach&quot;</span>, <span class="hljs-string">&quot;Kiwi&quot;</span>];<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruitsArr=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(fruitsArr));<br>  <span class="hljs-comment">// false</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruitsArr=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;sss&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">13</span> &#125;));<br>&#125;<br><span class="hljs-title function_">isArray</span>();<br></code></pre></td></tr></table></figure><ul><li>array.valueOf()：输出原数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">valueOfArray</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Cherry&quot;</span>, <span class="hljs-string">&quot;Peach&quot;</span>, <span class="hljs-string">&quot;Kiwi&quot;</span>];<br>  <span class="hljs-comment">// [ &#x27;Banana&#x27;, &#x27;Cherry&#x27;, &#x27;Peach&#x27;, &#x27;Kiwi&#x27; ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruitsArr=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">valueOf</span>());<br>&#125;;<br><span class="hljs-title function_">valueOfArray</span>();<br></code></pre></td></tr></table></figure><ul><li>array.pop()：删除最后一个元素</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealArrays</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>];<br>  <span class="hljs-comment">// 删除项：Mango</span><br>  <span class="hljs-comment">// 数组：[&#x27;Banana&#x27;, &#x27;Orange&#x27;, &#x27;Apple&#x27;]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;pop=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">pop</span>());<br>&#125;;<br><span class="hljs-title function_">dealArrays</span>();<br></code></pre></td></tr></table></figure><ul><li>array.shift()：删除第一个元素</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealArrays</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>];<br>  <span class="hljs-comment">// Banana</span><br>  <span class="hljs-comment">// 数组：[ &#x27;Orange&#x27;, &#x27;Apple&#x27;,&#x27;Mango&#x27;]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;shift=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">shift</span>());<br>&#125;;<br><span class="hljs-title function_">dealArrays</span>();<br></code></pre></td></tr></table></figure><ul><li>array.unshift()：向数组开头添加一个元素</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealArrays</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>];<br>  <span class="hljs-comment">// [ &#x27;Kiwi&#x27;, &#x27;Banana&#x27;, &#x27;Orange&#x27;, &#x27;Apple&#x27;, &#x27;Mango&#x27; ];</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;unshift=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">unshift</span>(<span class="hljs-string">&quot;Kiwi&quot;</span>));<br>&#125;;<br><span class="hljs-title function_">dealArrays</span>();<br></code></pre></td></tr></table></figure><ul><li>array.push()：向数组末尾添加一个元素</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealArrays</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>];<br>  <span class="hljs-comment">// [ &#x27;Banana&#x27;, &#x27;Orange&#x27;, &#x27;Apple&#x27;, &#x27;Mango&#x27;, &#x27;Leamon&#x27; ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;push=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;Leamon&quot;</span>), fruitsArr);<br>&#125;;<br><span class="hljs-title function_">dealArrays</span>();<br></code></pre></td></tr></table></figure><ul><li>array.splice()：向数组添加 / 删除元素</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealArrays</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>];<br>  <span class="hljs-comment">// 删除项：Mango</span><br>  <span class="hljs-comment">// 数组：[&#x27;Banana&#x27;, &#x27;Orange&#x27;, &#x27;Apple&#x27;]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;pop=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">pop</span>());<br>&#125;;<br><span class="hljs-title function_">dealArrays</span>();<br></code></pre></td></tr></table></figure><ul><li>array.slice(开始索引，结束索引)：截取数组，并返回一个新数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealArrays</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>, <span class="hljs-string">&quot;Leamon&quot;</span>];<br>  <span class="hljs-comment">// [ &#x27;Banana&#x27;, &#x27;Orange&#x27;, &#x27;Apple&#x27;, &#x27;Mango&#x27; ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;slice=====&gt;&gt;&gt;&quot;</span>, fruitsArr.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>));<br>&#125;;<br><span class="hljs-title function_">dealArrays</span>();<br></code></pre></td></tr></table></figure><ul><li>array.splice()：向数组添加 / 删除元素</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealArrays</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br><span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&#x27;Kiwi&#x27;</span>, <span class="hljs-string">&#x27;Banana&#x27;</span>, <span class="hljs-string">&#x27;Orange&#x27;</span>, <span class="hljs-string">&#x27;Apple&#x27;</span>, <span class="hljs-string">&#x27;Mango&#x27;</span>, <span class="hljs-string">&#x27;Leamon&#x27;</span>];<br><span class="hljs-comment">/* 在index = 2时，添加一个，名叫Watermelon的元素 */</span><br>fruitsArr.<span class="hljs-title function_">splice</span>(<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Watermelon&#x27;</span>);<br><br><span class="hljs-comment">// [&#x27;Kiwi&#x27;, &#x27;Banana&#x27;, &#x27;Watermelon&#x27;, &#x27;Orange&#x27;, &#x27;Apple&#x27;, &#x27;Mango&#x27;, &#x27;Leamon&#x27;]</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;splice=====&gt;&gt;&gt;&#x27;</span>, fruitsArr, arr);<br><span class="hljs-title function_">dealArrays</span>();<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealArrays</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>, <span class="hljs-string">&quot;Lemon&quot;</span>];<br>  <span class="hljs-comment">/* 在index = 2时，删除一个元素并添加两个元素 */</span><br>  <span class="hljs-keyword">const</span> arr = fruitsArr.<span class="hljs-title function_">splice</span>(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&quot;Watermelon&quot;</span>, <span class="hljs-string">&quot;Peach&quot;</span>);<br><br>  <span class="hljs-comment">// [&#x27;Kiwi&#x27;, &#x27;Banana&#x27;, &#x27;Watermelon&#x27;, &#x27;Peach&#x27;, &#x27;Apple&#x27;, &#x27;Mango&#x27;, &#x27;Lemon&#x27;];</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;splice=====&gt;&gt;&gt;filterArr&quot;</span>, fruitsArr);<br>&#125;;<br><span class="hljs-title function_">dealArrays</span>();<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">dealArrays</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruitsArr = [<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>, <span class="hljs-string">&quot;Lemon&quot;</span>];<br>  <span class="hljs-comment">/* 在index = 3时，删除两个元素 */</span><br>  fruitsArr.<span class="hljs-title function_">splice</span>(<span class="hljs-number">3</span>, <span class="hljs-number">2</span>);<br>  <span class="hljs-comment">// [ &#x27;Kiwi&#x27;, &#x27;Banana&#x27;, &#x27;Orange&#x27;, &#x27;Lemon&#x27; ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;splice=====&gt;&gt;&gt;&quot;</span>, fruitsArr);<br>&#125;;<br><span class="hljs-title function_">dealArrays</span>();<br></code></pre></td></tr></table></figure><h1 id="迭代">迭代</h1><h2 id="循环">循环</h2><ul><li>array.forEach(项目值，项目索引，数组本身)：循环数组，不会更改原来的数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">forEachArr</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> colorArr = [<span class="hljs-string">&quot;Red&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Blue&quot;</span>, <span class="hljs-string">&quot;Purple&quot;</span>];<br>  <span class="hljs-keyword">const</span> arr = [];<br>  colorArr.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">value, index, array</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 当前数据</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;val=====&gt;&gt;&gt;&quot;</span>, value);<br>    <span class="hljs-comment">// 当前index</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;index=====&gt;&gt;&gt;&quot;</span>, index);<br>    <span class="hljs-comment">// 当前数组</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;array=====&gt;&gt;&gt;&quot;</span>, array);<br><br>    <span class="hljs-keyword">if</span> (value == <span class="hljs-string">&quot;Red&quot;</span>) &#123;<br>      <span class="hljs-comment">// console.log(&#x27;1=====&gt;&gt;&gt;&#x27;);</span><br>      value = <span class="hljs-string">&quot;Bananas&quot;</span>;<br>    &#125;<br>    arr.<span class="hljs-title function_">push</span>(value);<br>  &#125;);<br>  <span class="hljs-comment">// [ &#x27;Bananas&#x27;, &#x27;Orange&#x27;, &#x27;Blue&#x27;, &#x27;Purple&#x27; ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr);<br>&#125;<br><span class="hljs-title function_">forEachArr</span>();<br></code></pre></td></tr></table></figure><ul><li>array.map(项目值，项目索引，数组本身)：循环数组，会更改原来的数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">mapArr</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> colorArr = [<span class="hljs-string">&quot;Red&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Blue&quot;</span>, <span class="hljs-string">&quot;Purple&quot;</span>];<br><br>  <span class="hljs-keyword">const</span> arr = colorArr.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">value, index, array</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 当前数据</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;val=====&gt;&gt;&gt;&quot;</span>, value);<br>    <span class="hljs-comment">// 当前index</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;index=====&gt;&gt;&gt;&quot;</span>, index);<br>    <span class="hljs-comment">// 当前数组</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;array=====&gt;&gt;&gt;&quot;</span>, array);<br>    <span class="hljs-keyword">if</span> (value == <span class="hljs-string">&quot;Orange&quot;</span>) &#123;<br>      value = <span class="hljs-string">&quot;哈哈哈&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> value;<br>  &#125;);<br>  <span class="hljs-comment">// [ &#x27;Red&#x27;, &#x27;哈哈哈&#x27;, &#x27;Blue&#x27;, &#x27;Purple&#x27; ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr);<br>&#125;<br><span class="hljs-title function_">mapArr</span>();<br></code></pre></td></tr></table></figure><ul><li>array.filter(项目值)：过滤数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">filterArr</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> milkArr = [<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">18</span>, <span class="hljs-number">16</span>, <span class="hljs-number">12</span>, <span class="hljs-number">54</span>, <span class="hljs-number">4</span>, <span class="hljs-number">33</span>];<br>  <span class="hljs-keyword">const</span> arr = milkArr.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> value &gt; <span class="hljs-number">8</span>;<br>  &#125;);<br>  <span class="hljs-comment">// [ 10, 20, 30, 18,16, 12, 54, 33 ]</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr);<br>&#125;;<br><br><span class="hljs-title function_">filterArr</span>();<br></code></pre></td></tr></table></figure><ul><li>array.reduce()：对数据进行运算处理</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">reduceArr</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> numArr = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(&#123; <span class="hljs-attr">length</span>: <span class="hljs-number">21</span> &#125;, <span class="hljs-function">(<span class="hljs-params">v, i</span>) =&gt;</span> i);<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-keyword">const</span> arr1 = numArr.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">acc, e, index, arr</span>) =&gt;</span> e &gt; <span class="hljs-number">10</span>);<br><br>  <span class="hljs-keyword">const</span> arr2 = numArr.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">acc, e</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;acc=====&gt;&gt;&gt;&quot;</span>, acc);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;e=====&gt;&gt;&gt;&quot;</span>, e);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;hhh=====&gt;&gt;&gt;&quot;</span>, e - acc);<br>    <span class="hljs-keyword">return</span> e - acc &gt; <span class="hljs-number">10</span>;<br>  &#125;);<br>  <span class="hljs-comment">// false</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arr=====&gt;&gt;&gt;&quot;</span>, arr1);<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arr=====&gt;&gt;&gt;&quot;</span>, arr2);<br>&#125;;<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202402271644542.png" /></p><ul><li>array.every(项目值,项目索引，项目本身)：检查数组中的所有元素是否都通过了测试（返回true / false ）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">arrEvery</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> numArr = [<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">42</span>, <span class="hljs-number">54</span>];<br><br>  <span class="hljs-keyword">const</span> arr1 = numArr.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arr1=====&gt;&gt;&gt;e&quot;</span>, e);<br>    <span class="hljs-keyword">return</span> e * <span class="hljs-number">3</span> &gt; <span class="hljs-number">10</span>;<br>  &#125;);<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr1);<br><br>  <span class="hljs-keyword">const</span> arr2 = numArr.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arr2=====&gt;&gt;&gt;e&quot;</span>, e);<br>    <span class="hljs-keyword">return</span> (e = <span class="hljs-number">10</span>);<br>  &#125;);<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr2);<br>&#125;;<br><span class="hljs-title function_">arrEvery</span>();<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202402270926637.png" /></p><ul><li>array.some(项目值,项目索引，项目本身)：检查数组中的所有元素是否都通过了测试（返回true / false ）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">arrSome</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> numArr = [<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">42</span>, <span class="hljs-number">54</span>];<br>  <span class="hljs-keyword">const</span> arr1 = numArr.<span class="hljs-title function_">some</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> e * <span class="hljs-number">3</span> &gt; <span class="hljs-number">10</span>);<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr1);<br><br>  <span class="hljs-keyword">const</span> arr2 = numArr.<span class="hljs-title function_">some</span>(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> value &gt; <span class="hljs-number">40</span>);<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr2);<br>&#125;<br><span class="hljs-title function_">arrSome</span>();<br></code></pre></td></tr></table></figure><p><imgsrc="https://beautiful-folders-1256863744.cos.ap-nanjing.myqcloud.com/images/202402270931261.png" /></p><blockquote><p>[!note] every：有一个不符合条件就停止循环<br/>some：一直循环到符合条件为止</p></blockquote><h2 id="查找元素">查找元素</h2><ul><li>array.indexOf(val)：在数组中搜索元素并返回其位置，找不到返回-1</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">indexOfArr</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> numArr = [<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">42</span>, <span class="hljs-number">54</span>, <span class="hljs-number">10</span>];<br>  <span class="hljs-comment">// 3</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numArr=====&gt;&gt;&gt;&quot;</span>, numArr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-number">10</span>));<br>  <span class="hljs-comment">// -1</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numArr=====&gt;&gt;&gt;&quot;</span>, numArr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-number">15</span>));<br>&#125;;<br><span class="hljs-title function_">indexOfArr</span>();<br></code></pre></td></tr></table></figure><ul><li>array.lastIndexOf(val)：在数组中搜索元素出现的最后一次并返回其位置，找不到返回-1</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">lastIndexOfArr</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> numArr = [<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">42</span>, <span class="hljs-number">54</span>, <span class="hljs-number">10</span>];<br>  <span class="hljs-comment">// 11</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numArr=====&gt;&gt;&gt;&quot;</span>, numArr.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-number">10</span>));<br>  <span class="hljs-comment">// 1</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numArr=====&gt;&gt;&gt;&quot;</span>, numArr.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-number">5</span>));<br>  <span class="hljs-comment">// -1</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numArr=====&gt;&gt;&gt;&quot;</span>, numArr.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-number">9</span>));<br>&#125;;<br><span class="hljs-title function_">lastIndexOfArr</span>();<br></code></pre></td></tr></table></figure><ul><li>array.find(val)：返回符合条件的<font color="#ff5353">元素</font>，没有符合的返回undefined</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">findArr</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> numArr = [<span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">42</span>, <span class="hljs-number">54</span>, <span class="hljs-number">10</span>];<br><br>  <span class="hljs-keyword">const</span> isLargeNumber = numArr.<span class="hljs-title function_">find</span>(<span class="hljs-function">(<span class="hljs-params">element</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;ele=====&gt;&gt;&gt;&quot;</span>, element);<br>    <span class="hljs-keyword">return</span> element &gt; <span class="hljs-number">8</span>;<br>  &#125;);<br>  <span class="hljs-comment">// 10</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;isLargeNumber=====&gt;&gt;&gt;&quot;</span>, isLargeNumber);<br><br>  <span class="hljs-keyword">const</span> isSmallerNumber = numArr.<span class="hljs-title function_">find</span>(<span class="hljs-function">(<span class="hljs-params">element</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;ele=====&gt;&gt;&gt;&quot;</span>, element);<br>    <span class="hljs-keyword">return</span> element &lt; <span class="hljs-number">4</span>;<br>  &#125;);<br>  <span class="hljs-comment">// undefined</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;isSmallerNumber=====&gt;&gt;&gt;&quot;</span>, isSmallerNumber);<br>&#125;;<br><span class="hljs-title function_">findArr</span>();<br></code></pre></td></tr></table></figure><ul><li>array.findIndex(val)：返回符合条件的<font color="#ff5353">个数</font>，没有符合的返回-1</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">findIndexArr</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> numArr = [<span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">42</span>, <span class="hljs-number">54</span>, <span class="hljs-number">10</span>];<br>  <span class="hljs-comment">/* 比对是否有比10更大的数字 */</span><br>  <span class="hljs-keyword">const</span> isLargeNumber = numArr.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function">(<span class="hljs-params">element</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;ele=====&gt;&gt;&gt;&quot;</span>, element);<br>    <span class="hljs-keyword">return</span> element &gt; <span class="hljs-number">10</span>;<br>  &#125;);<br>  <span class="hljs-comment">// 4</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;isLargeNumber=====&gt;&gt;&gt;&quot;</span>, isLargeNumber);<br>  <span class="hljs-comment">/* 比对是否有比4更小的数字 */</span><br>  <span class="hljs-keyword">const</span> isSmallerNumber = numArr.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function">(<span class="hljs-params">element</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;ele=====&gt;&gt;&gt;&quot;</span>, element);<br>    <span class="hljs-keyword">return</span> element &lt; <span class="hljs-number">4</span>;<br>  &#125;);<br>  <span class="hljs-comment">// -1</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;isSmallerNumber=====&gt;&gt;&gt;&quot;</span>, isSmallerNumber);<br>&#125;;<br><span class="hljs-title function_">findIndexArr</span>();<br></code></pre></td></tr></table></figure><ul><li>array.includes(查找元素, 开始位置)：检测数组是否包含指定的元素。返回True / False</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">arrayIncludesStr</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">var</span> fruitsArr = [<br>    <span class="hljs-string">&quot;Banana&quot;</span>,<br>    <span class="hljs-string">&quot;Cherry&quot;</span>,<br>    <span class="hljs-string">&quot;Peach&quot;</span>,<br>    <span class="hljs-string">&quot;Kiwi&quot;</span>,<br>    <span class="hljs-string">&quot;Leamon&quot;</span>,<br>    <span class="hljs-string">&quot;Watermelon&quot;</span>,<br>    <span class="hljs-string">&quot;Strawberry&quot;</span>,<br>    <span class="hljs-string">&quot;Orange&quot;</span>,<br>    <span class="hljs-string">&quot;Apple&quot;</span>,<br>    <span class="hljs-string">&quot;Mango&quot;</span>,<br>    <span class="hljs-string">&quot;Banana&quot;</span>,<br>  ];<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(fruitsArr.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;Peach&quot;</span>));<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(fruitsArr.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;Banana&quot;</span>));<br>  <span class="hljs-comment">// false</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(fruitsArr.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;sss&quot;</span>));<br>  <span class="hljs-comment">// false</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(fruitsArr.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;Peach&quot;</span>, <span class="hljs-number">4</span>));<br>  <span class="hljs-comment">// true</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(fruitsArr.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-number">1</span>));<br>&#125;<br><span class="hljs-title function_">arrayIncludesStr</span>();<br></code></pre></td></tr></table></figure><h1 id="排序">排序</h1><ul><li>sort：对数组进行正向排序</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">sortArray</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruits = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>];<br>  <span class="hljs-comment">// [&#x27;Apple&#x27;, &#x27;Banana&#x27;, &#x27;Mango&#x27;, &#x27;Orange&#x27;];</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruits=====&gt;&gt;&gt;&quot;</span>, fruits.<span class="hljs-title function_">sort</span>());<br>  <span class="hljs-comment">/* 生成10位整数 */</span><br>  <span class="hljs-keyword">const</span> strArr = [...<span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-built_in">Math</span>.ceil(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10000000000</span>)&#125;</span>`</span>];<br>  <span class="hljs-comment">// [&#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;, &#x27;5&#x27;, &#x27;5&#x27;, &#x27;7&#x27;, &#x27;7&#x27;, &#x27;8&#x27;, &#x27;8&#x27;, &#x27;9&#x27;];</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;strArr=====&gt;&gt;&gt;&quot;</span>, strArr.<span class="hljs-title function_">sort</span>());<br>&#125;;<br><span class="hljs-title function_">sortArray</span>();<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">sortArray</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> strArr = [<span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>];<br><br>  <span class="hljs-keyword">const</span> arr = strArr.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> a - b;<br>  &#125;);<br>  <span class="hljs-comment">// [0, 1, 2, 3, 4, 6, 7, 8, 9, 10];</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arr=====&gt;&gt;&gt;&quot;</span>, arr);<br><br>  <span class="hljs-keyword">const</span> arr1 = strArr.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> b - a;<br>  &#125;);<br>  <span class="hljs-comment">// [10, 9, 8, 7, 6, 4, 3, 2, 1, 0];</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arr1=====&gt;&gt;&gt;&quot;</span>, arr1);<br>&#125;;<br><span class="hljs-title function_">sortArray</span>();<br></code></pre></td></tr></table></figure><ul><li>reverse()：反转数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">reverserray</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> fruits = [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>];<br>  <span class="hljs-comment">// [&#x27;Mango&#x27;, &#x27;Apple&#x27;, &#x27;Orange&#x27;, &#x27;Banana&#x27;];</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fruits=====&gt;&gt;&gt;&quot;</span>, fruits.<span class="hljs-title function_">reverse</span>());<br>  <span class="hljs-keyword">const</span> strArr = [<span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>];<br>  <span class="hljs-comment">// [7, 4, 3, 0, 9, 1, 6, 8, 10, 2];</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;strArr=====&gt;&gt;&gt;&quot;</span>, strArr.<span class="hljs-title function_">reverse</span>());<br>&#125;;<br><span class="hljs-title function_">reverserray</span>();<br></code></pre></td></tr></table></figure><ul><li>Math.max(val)：参数 val 中最大的一个数字</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> strArr = [<span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>];<br><span class="hljs-comment">// 10</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;max=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(...strArr));<br></code></pre></td></tr></table></figure><ul><li>Math.min(val)：参数 val 中最小的一个数字</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> strArr = [<span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>];<br><span class="hljs-comment">// 0</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;max=====&gt;&gt;&gt;&quot;</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(...strArr));<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>javaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用git➕hexo发布博客</title>
    <link href="/%E4%BD%BF%E7%94%A8git%E2%9E%95hexo%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/%E4%BD%BF%E7%94%A8git%E2%9E%95hexo%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="github-配置">Github 配置</h1><h2 id="创建仓库">创建仓库</h2><p>打开 github 并新建仓库<br/> <div class="note note-info">            <p>📢 仓库名称格式为: <strong>github用户名.github.io</strong>，例如我的用户名叫</p>          </div> <img src="./create.png"alt="创建项目" /></p><h2 id="配置-personal-token">配置 personal token</h2><ol type="1"><li><p>打开设置 <img src="./personal-token-1.png"alt="alt text" /></p></li><li><p>滑到底部在侧边栏找到并点击 <strong><em>Developersettings</em></strong></p></li><li><p>点击 Tokens <span class="math inline">\(\Rightarrow\)</span>Generate new token <img src="./personal-token-2.png"alt="alt text" /></p></li><li><p>创建 Personal access tokens 并点击 <strong><em>Generatetoken</em></strong> 保存 token <img src="./personal-token-3.png"alt="alt text" /></p></li><li><p>跳转的页面中，会出现 token，复制并记住 token <div class="note note-warning">            <p>⚠️ 注意:在离开这个界面后这串代码将不再可见，因此在刷新界面或者离开界面前一定复制好token。</p>          </div> <imgsrc="./personal-token-4.png" alt="alt text" /></p></li></ol><h1 id="本地配置">本地配置</h1><h2 id="创建项目">创建项目</h2><ol type="1"><li>安装 hexo 环境</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm install <span class="hljs-literal">-g</span> hexo<span class="hljs-literal">-cli</span><br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>初始化博客</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo init 博客名<br></code></pre></td></tr></table></figure><ol start="3" type="1"><li>对刚创建的博客进行生成静态文件</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cd</span> 创建的博客名<br>hexo g / hexo generate<br></code></pre></td></tr></table></figure><h2 id="配置">配置</h2><p>1 本地运行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo s / hexo server<br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>清除缓存</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo clean<br></code></pre></td></tr></table></figure><ol start="3" type="1"><li>安装插件</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm i hexo<span class="hljs-literal">-deployer-git</span> <span class="hljs-literal">--save</span><br></code></pre></td></tr></table></figure><ol start="4" type="1"><li>配置 _config.yml</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br><span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:github用户名/仓库名.github.io.git</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">main</span> <span class="hljs-comment"># 仓库分支，默认是main</span><br></code></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br><span class="hljs-attr">repository:</span> <span class="hljs-string">https://你刚刚创建的personal</span> <span class="hljs-string">token@github.com/github用户名/仓库名.github.io.git</span> <span class="hljs-comment">#你的仓库地址</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">main</span> <span class="hljs-comment"># 仓库分支，默认是main</span><br></code></pre></td></tr></table></figure><ol start="5" type="1"><li>部署到 github 仓库</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo d / hexo deploy<br></code></pre></td></tr></table></figure><ol start="6" type="1"><li>访问 github 用户名.github.io</li></ol><h2 id="安装主题">安装主题</h2><ol type="1"><li>安装主题并使用配置 (这里我用的是 fluid 主题)</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>根目录创建 _config.fluid.yml <div class="note note-info">            <p>🆕 _config.fluid.yml 的配置会覆盖 _config.yml 的配置</p>          </div></li></ol><h2 id="配置域名">配置域名</h2><ol type="1"><li><p>解析 DNS（我这里用的腾讯云） <img src="./yuming1.png" /></p></li><li><p>在 source 下创建 CNAME 写配置域名</p></li><li><p>在_config.yml 中 url 填写访问的域名</p></li><li><p>打开设置并选择 github pages 配置 <imgsrc="./yuming2.png" /></p></li><li><p>选择访问分支并保存 <img src="./yuming3.png" /></p></li><li><p>填写刚刚写的域名并保存，他会自动解析成功后即可通过访问 <imgsrc="./yuming4.png" /> <img src="./yuming5.png" /> <imgsrc="./yuming6.png" /></p></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">url:</span> <span class="hljs-string">配置的域名</span> <span class="hljs-comment"># 访问网址</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git之使用多个ssh</title>
    <link href="/Git%E4%B9%8B%E4%BD%BF%E7%94%A8%E5%A4%9A%E4%B8%AAssh/"/>
    <url>/Git%E4%B9%8B%E4%BD%BF%E7%94%A8%E5%A4%9A%E4%B8%AAssh/</url>
    
    <content type="html"><![CDATA[    <div class="fold">      <div class="fold-title fold-success collapsed" data-toggle="collapse" href="#collapse-65eb22d1" role="button" aria-expanded="false" aria-controls="collapse-65eb22d1">        <div class="fold-arrow">▶</div>引用链接      </div>      <div class="fold-collapse collapse" id="collapse-65eb22d1">        <div class="fold-content">          <ul><li><p><a href="https://segmentfault.com/a/1190000017945878">Mac OS下配置多个 SSH Key</a></p></li><li><p><a href="/git%E7%9A%84%E4%BD%BF%E7%94%A8/" title="Git的使用">git基础教程</a></p></li></ul>        </div>      </div>    </div><h1 id="取消全局绑定的账号">1、取消全局绑定的账号</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git config –global –unset user.name<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git config –global –unset user.emai<br></code></pre></td></tr></table></figure><figure><img src="./Git-global-config.png" alt="git全局配置" /><figcaption aria-hidden="true">git全局配置</figcaption></figure><h1 id="生成多个-ssh-key">2、生成多个 ssh key</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">ssh-keygen -t rsa -C &quot;your_emial@examle.com&quot;<br></code></pre></td></tr></table></figure><p><img src="./create%20ssh%20key.png" alt="创建ssh key" /> <imgsrc="./ssh-key.png" alt="ssh key" /></p><h1 id="在-github码云等平台绑定创建的-ssh-key">3、在github、码云等平台绑定创建的 ssh key</h1><h1 id="在.sshconfig-文件中进行配置">4、 在.ssh/config文件中进行配置</h1><p>[注释]：若没有 config 文件，在.ssh 文件中创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">touch config<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ssh"><br>// 配置<br><br>// Host随便写，最后测试连接的名字<br><br>// HostName写对应的地址（如果是公司的域名:110.123.123那么这⾥就是110.123.123）<br><br>// IdentityFile 你⽣成的ssh key名字<br><br><br>Host github.com<br><br>HostName github.com<br><br>PreferredAuthentications publickey<br><br>IdentityFile ~/.ssh/id_rsa<br><br># gitee 账号邮箱<br><br>Host su.gitee.com<br><br>HostName gitee.com<br><br>PreferredAuthentications publickey<br><br>IdentityFile ~/.ssh/id_rsa_2<br><br></code></pre></td></tr></table></figure><h1 id="添加刚刚创建的多个ssh-key到系统">5、 添加刚刚创建的多个sshkey到系统</h1><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">ssh-<span class="hljs-keyword">add</span><span class="language-bash"> ~./ssh/id_rsa_2</span><br></code></pre></td></tr></table></figure><h1 id="测试">6、 测试</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 测试 Github链接是否成功</span><br><span class="hljs-comment"># 出现</span><br><span class="hljs-comment"># `Hi 用户名! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.` 即可</span><br><br><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@su</span>.github.com<br></code></pre></td></tr></table></figure><figure><img src="./ceshi.png" alt="测试ssh是否配置成功" /><figcaption aria-hidden="true">测试ssh是否配置成功</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>web前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git的使用</title>
    <link href="/git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/git%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[    <div class="fold">      <div class="fold-title fold-success collapsed" data-toggle="collapse" href="#collapse-e791eaca" role="button" aria-expanded="false" aria-controls="collapse-e791eaca">        <div class="fold-arrow">▶</div>引用链接      </div>      <div class="fold-collapse collapse" id="collapse-e791eaca">        <div class="fold-content">          <ul><li><a href="https://gitmoji.js.org/">git emoji</a></li><li><a href="https://hooj0.github.io/git-emoji-guide/">gitemoji-guide</a></li></ul>        </div>      </div>    </div><h1 id="安装">安装</h1><h2 id="查看是否安装-git">查看是否安装 git</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git version<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240222101917.png"alt="这是图片" /><figcaption aria-hidden="true">这是图片</figcaption></figure><h1 id="配置">配置</h1><h2 id="配置用户">配置用户</h2><!--[^_^]: ## (当前项目的用户)> [# mac 下镜像飞速安装 Homebrew 教程](https://zhuanlan.zhihu.com/p/90508170) --><ul><li>当前项目的用户</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git config <span class="hljs-keyword">user</span>.name &quot;你的用户名&quot;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git config user.email &quot;你的邮箱&quot;<br></code></pre></td></tr></table></figure><ul><li>全局用户</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;你的用户名&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git config --global user.email &quot;你的邮箱&quot;<br></code></pre></td></tr></table></figure><h2 id="查看-git-用户配置">查看 git 用户配置</h2><ol type="1"><li>查看系统 config</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git config --system --list<br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>查看当前用户（global）配置</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git config --global --list<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240222105139.png"alt="这是图片" /><figcaption aria-hidden="true">这是图片</figcaption></figure><ol start="3" type="1"><li>查看当前仓库配置信息</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git config --local --list<br></code></pre></td></tr></table></figure><figure><imgsrc="https://beautiful-generous-cute-and-kind-fairy-notes-folders.oss-cn-hangzhou.aliyuncs.com/images/Pasted%20image%2020240222105226.png"alt="这是图片" /><figcaption aria-hidden="true">这是图片</figcaption></figure><h1 id="使用">使用</h1><h2 id="上传到代码仓库管理平台">上传到代码仓库管理平台</h2><ul><li>创建 git 仓库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git init<br></code></pre></td></tr></table></figure><ul><li>关联本地项目到远程仓库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ssh"># origin 为链接远程仓库的别名，可以改成别的<br>git remote add origin 远程地址<br></code></pre></td></tr></table></figure><ol start="3" type="1"><li>存到暂缓区</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git add .<br></code></pre></td></tr></table></figure><ol start="4" type="1"><li>提交内容</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git commit -m &quot;提交内容&quot;<br></code></pre></td></tr></table></figure><ol start="5" type="1"><li>提交到远程仓库</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git push 链接远程仓库的别名 仓库分支<br></code></pre></td></tr></table></figure><h2 id="更新最新代码">更新最新代码</h2><ul><li>拉取最新代码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git pull<br></code></pre></td></tr></table></figure><ul><li>拉取某个分⽀最新代码</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> pull 链接远程仓库的别名 分支名<br></code></pre></td></tr></table></figure><h2 id="查看当前分支状态">查看当前分支状态</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git status<br></code></pre></td></tr></table></figure><h2 id="查看提交文件">查看提交文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git log<br></code></pre></td></tr></table></figure><h2 id="更改-commit">更改 commit</h2><ul><li>未进行 push 的 commit</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ssh">git commit --amend<br></code></pre></td></tr></table></figure><h2 id="提交规范">提交规范</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">feat:</span> 新功能（feature）<br><span class="hljs-symbol">fix:</span> 修补bug<br><span class="hljs-symbol">docs:</span> 文档（documentation）<br><span class="hljs-symbol">style:</span> 格式（不影响代码运行的变动）<br><span class="hljs-symbol">refactor:</span> 重构（即不是新增功能，也不是修改bug的代码变动）<br><span class="hljs-symbol">chore:</span> 构建过程或辅助工具的变动<br><span class="hljs-symbol">revert:</span> 撤销，版本回退<br><span class="hljs-symbol">perf:</span> 性能优化<br>test：测试<br><span class="hljs-symbol">improvement:</span> 改进<br><span class="hljs-symbol">build:</span> 打包<br><span class="hljs-symbol">ci:</span> 持续集成<br></code></pre></td></tr></table></figure><p><ahref="https://hooj0.github.io/git-emoji-guide/">git-emoji-guide</a></p><h2 id="git-打-tag">git 打 tag</h2><p><a href="https://juejin.cn/post/7038929527417880606">用 git 给项目打tag 标签</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>web前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>关于我们</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h1 id="关于我">关于我</h1><p>欢迎来到我的个人博客，一个充满智慧火花和创意灵感的数字空间。在这里，我将与您分享我对于技术、生活、以及我们所处世界的独到见解和深刻思考。</p><h2 id="个人背景">个人背景</h2><p>我是一名自由职业者，在这个领域有着多年的经验和热情。我对技术、艺术和人文方面的事物都有着浓厚的兴趣，并且热爱探索世界的各种美好。## 我的博客 ### 博客宗旨我的博客旨在成为一个知识共享和思想交流的平台。我相信，通过分享和讨论，我们能够共同成长，解锁新的可能性，并且启发彼此。</p><h3 id="内容特色">内容特色</h3><ul><li><strong>技术前沿：</strong>我会定期发布关于最新技术趋势、编程技巧和软件开发的深入分析，帮助您保持在技术浪潮的最前沿。</li><li><strong>生活感悟：</strong>分享日常生活中的小确幸和挑战，以及如何将这些经历转化为个人成长的契机。</li><li><strong>文化探索：</strong>探讨不同文化背景下的思维方式和生活哲学，拓宽我们的视野和理解。</li><li><strong>创意工作坊：</strong>提供创意写作、艺术创作和设计思维的技巧和灵感，激发您的创造力。</li></ul><h3 id="互动社区">互动社区</h3><p>我的博客不仅是一个单向的内容发布平台，更是一个互动的社区。我鼓励读者在评论区留下您的想法和反馈，参与讨论，共同构建一个充满活力的知识共享环境。</p><!-- **更新频率：**我承诺每周至少更新一篇高质量的文章，确保您总能在这里找到新鲜、有价值的内容。 --><h3 id="联系方式">联系方式</h3><p>如果您有任何问题、建议或者想要合作，欢迎通过电子邮件：3142289320@qq.com与我取得联系。我期待与您的每一次交流。</p><p>感谢您的访问，希望我的博客能够成为您获取知识、启发思考和享受阅读的港湾。让我们一起在这个信息爆炸的时代，寻找那些真正有价值的珍珠。</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[@charset "UTF-8";/* 默认样式定义 *//** 内联代码 **/.markdown-body code, .markdown-body .code_color_5, .markdown-body .code_color_4, .markdown-body .code_color_3, .markdown-body .code_color_2, .markdown-body .code_color_1, .markdown-body .code_tips, .markdown-body .code_danger, .markdown-body .code_success, .markdown-body .code_warning, .markdown-body .code_info {  color: #c7254e;  background-color: #f9f2f4;  font-size: inherit;}.code_info {  color: #6ca3e5 !important;  background-color: #dfeefd !important;}.code_warning {  color: #eabc18 !important;  background-color: #faf0d5 !important;}.code_success {  color: #88d622 !important;  background-color: #edf8db !important;}.code_danger {  color: #e75766 !important;  background-color: #fbe6e9 !important;}.code_tips {  color: #1dafba !important;  background-color: #eff0f0 !important;}.code_color_1 {  color: #262626 !important;  background-color: #daf7f8 !important;}.code_color_2 {  color: #262626 !important;  background-color: #e3f7ef !important;}.code_color_3 {  color: #262626 !important;  background-color: #fbeadc !important;}.code_color_4 {  color: #262626 !important;  background-color: #fbe1f0 !important;}.code_color_5 {  color: #262626 !important;  background-color: #ece4fb !important;}/** h1~h6 **/h1 {  border-bottom: 0.0625em solid var(--line-color);  box-sizing: border-box;  margin-top: 0 !important;  padding-bottom: 0.4rem;}h1::before {  display: inline-block !important;}h2 {  border-bottom: 0.0625em solid var(--line-color);  box-sizing: border-box;  margin-top: 0 !important;  padding-bottom: 0.4rem;}h2::before {  display: inline-block !important;}h3 {  border-bottom: 0.0625em solid var(--line-color);  box-sizing: border-box;  margin-top: 0 !important;  padding-bottom: 0.4rem;}h3::before {  display: inline-block !important;}h4 {  border-bottom: 0.0625em solid var(--line-color);  box-sizing: border-box;  margin-top: 0 !important;  padding-bottom: 0.4rem;}h4::before {  display: inline-block !important;}h5 {  border-bottom: 0.0625em solid var(--line-color);  box-sizing: border-box;  margin-top: 0 !important;  padding-bottom: 0.4rem;}h5::before {  display: inline-block !important;}h6 {  border-bottom: 0.0625em solid var(--line-color);  box-sizing: border-box;  margin-top: 0 !important;  padding-bottom: 0.4rem;}h6::before {  display: inline-block !important;}h1 {  font-size: 2em;}h2 {  font-size: 1.5em;}h3 {  font-size: 1.17em;}h4 {  font-size: 1em;}h5 {  font-size: 0.83em;}h6 {  font-size: 0.67em;}/** 小圆点 **/.markdown-body ul li {  margin-top: 0;  list-style: none;}.markdown-body ul li p {  display: inline-block;  margin-top: 0;  margin-bottom: 1em;}.markdown-body ul > li::before {  width: 6px;  height: 6px;  content: "";  border-radius: 50%;  background-color: var(--post-text-color);  display: inline-block;  margin-right: 0.5em;  vertical-align: middle;}.markdown-body ul > li ul li::before {  width: 6px;  height: 6px;  content: "";  border-radius: 50%;  background-color: transparent;  border: 0.0625em solid var(--post-text-color);  display: inline-block;  margin-right: 0.5em;  vertical-align: middle;}.markdown-body ul > li ul li ul li {  margin-bottom: 0.5em;}.markdown-body ul > li ul li ul li::before {  width: 0.375em;  height: 0.375em;  content: "";  border-radius: 0;  background-color: transparent;  border: 0.0625em solid var(--post-text-color);  display: inline-block;  margin-right: 0.5em;  vertical-align: middle;}.markdown-body .shell,.markdown-body .markdown,.markdown-body .hljs,.markdown-body .hljs-number {  color: var(--post-text-color);}.footnotes {  border-top: 0.0625em dashed var(--sec-text-color);  padding-top: 1em;}.MathJax {  color: #df2a3f;  text-align: left !important;}mark {  color: #494949;  background-color: #fefcd9;}]]></content>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[img {  margin: 1.5rem 0 !important;}embed {  width: 100%;}/* hr,.markdown-body hr {  border: none;} */table {  width: 100%; /*表格宽度*/  display: inline-table !important;  border: 1px solid #dedede; /*表格外边框设置*/  border-collapse: collapse; /*使用单一线条的边框*/}table th {  font-weight: bold; /*加粗*/  text-align: center !important; /*内容居中，加上 !important 避免被 Markdown 样式覆盖*/  background-color: rgba(158, 188, 226, 0.2) !important; /*背景色*/}table tr:hover {  background-color: #efefef !important;}.markdown-body {  overflow: hidden;}.latex-box {  display: flex;  P {    flex: 1;  }}h1,h2,h3,h4,h5,h6 {  padding-bottom: 0.5em !important;}.flex {  display: flex;  flex-direction: row;  align-items: center;}.justify-content-around {  justify-content: space-around;}.justify-content-between {  justify-content: space-between;}.justify-content-center {  justify-content: center;}.col-lg-2 {  max-width: 10% !important;  flex: inherit;}/*.container {  max-width: 80% !important;} */.markdown-body .col-lg-8 {  flex: inherit !important;  max-width: 100% !important;}.markdown-body .row {  flex-wrap: nowrap;  justify-content: space-between;}]]></content>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[// function main () {//  console.log('jaa')//  const light = document.getElementsByClassName('code-widget-light')//  const dark = document.getElementsByClassName('code-widget-dark')//  const dom = document.querySelector('.code-widget');//  console.log('class', dom.getAttribute('class'))//  console.log('className', dom.className)//  // code-widget-light//  // code-widget-dark// }// main()const mutationCallback = (mutationsList) => { for (let mutation of mutationsList) {  let type = mutation.type;  console.log('type=====>>>', type)  switch (type) {   case "childList":    console.log("A child node has been added or removed.");    break;   case "attributes":    console.log(`The ${mutation.attributeName} attribute was modified.`);    break;   case "subtree":    console.log(`The subtree was modified.`);    break;   default:    break;  } }};mutationCallback()const onClick = (onCLick) => { console.log('点击了=====>>>',)}onClick()const main = () => { console.log('jaa') const light = document.getElementsByClassName('code-widget-light') const dark = document.getElementsByClassName('code-widget-dark') const dom = document.querySelector('.code-widget'); console.log('class', dom.getAttribute('class')) console.log('className', dom.className)}function mains () { mutationCallback()}mains()// color-toggle-btn]]></content>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[window.onload = function () {  if (document.getElementsByClassName("icon-light").length > 0) {    changefontColorWithLightFromH1ToH6();    onFindZhuShi("#005cc5");  } else {    changefontColorWithDarkFromH1ToH6();    onFindZhuShi("#c4c6c9");  }  document    .getElementById("color-toggle-btn")    .addEventListener("click", function () {      if (document.getElementsByClassName("icon-light").length > 0) {        changefontColorWithLightFromH1ToH6();        onFindZhuShi("#005cc5");      } else {        changefontColorWithDarkFromH1ToH6();        onFindZhuShi("#c4c6c9");      }    });};const onFindZhuShi = (color) => {  const prompt = document.getElementsByClassName("prompt_");  const language = document.getElementsByClassName("language-bash");  for (let i of prompt) {    i.style.setProperty("color", color, "important");  }  for (let i of language) {    i.style.setProperty("color", color, "important");  }};// 更改h1~h6在暗夜模式下的字体颜色const changefontColorWithDarkFromH1ToH6 = () => {  const h1 = document.getElementsByTagName("h1");  const h2 = document.getElementsByTagName("h2");  const h3 = document.getElementsByTagName("h3");  const h4 = document.getElementsByTagName("h4");  const h5 = document.getElementsByTagName("h5");  const h6 = document.getElementsByTagName("h6");  console.log("当前是夜间模式=====>>>");  for (let i of h1) {    i.style.setProperty("color", "#ce5e5e", "important");  }  for (let i of h2) {    i.style.setProperty("color", "#ff9c5b", "important");  }  for (let i of h3) {    i.style.setProperty("color", "#f9c16a", "important");  }  for (let i of h4) {    i.style.setProperty("color", "#bed77c", "important");  }  for (let i of h5) {    i.style.setProperty("color", "#daeaaf", "important");  }  for (let i of h6) {    i.style.setProperty("color", "#cce6ff", "important");  }};// 更改h1~h6在日间模式下的字体颜色const changefontColorWithLightFromH1ToH6 = () => {  const h1 = document.getElementsByTagName("h1");  const h2 = document.getElementsByTagName("h2");  const h3 = document.getElementsByTagName("h3");  const h4 = document.getElementsByTagName("h4");  const h5 = document.getElementsByTagName("h5");  const h6 = document.getElementsByTagName("h6");  console.log("当前是日间模式=====>>>");  for (let i of h1) {    i.style.setProperty("color", "#8d657a", "important");  }  for (let i of h2) {    i.style.setProperty("color", "#e18a3b", "important");  }  for (let i of h3) {    i.style.setProperty("color", "#f4cb5d", "important");  }  for (let i of h4) {    i.style.setProperty("color", "#BDCE89", "important");  }  for (let i of h5) {    // b5c6b9    i.style.setProperty("color", "#89d377", "important");  }  for (let i of h6) {    i.style.setProperty("color", "#6b829f", "important");  }};]]></content>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[window.onload = function () { if (document.getElementsByClassName('code-widget-light').length > 0) {  // array.forEach(element => {  // });  console.log('包含 code-widget-light 这个class'); } else {  console.log('包含 code-widget-dark 这个class'); }}const change = () => { console.log('hexo=====>>>', myElement) const childElements = myElement[ 1 ].childNodes; console.log('childElements=====>>>', childElements) // console.log('hexo=====>>>', ) // 查找子元素 const myElement = document.getElementsByClassName('code') Array.from(myElement).map(element => {  console.log('qq=====>>>', element.children)  // element.getElementsByClassName('code') });}//  页面加载完成后执行const onload = () => {}// 当点击 color-toggle-btn 这个id才执行// const onClick = () => {//  document.getElementById('color-toggle-btn').addEventListener('click', function (event) {//   const myElement = document.getElementsByClassName('code')//   if (document.getElementsByClassName('code-widget-light').length > 0) {//    console.log('hexo=====>>>', myElement)//    const childElements = myElement[ 1 ].childNodes;//    console.log('childElements=====>>>', childElements)//    // console.log('hexo=====>>>', )//    Array.from(myElement).map(element => {//     console.log('qq=====>>>', element.children)//     // element.getElementsByClassName('code')//    });//    // array.forEach(element => {//    // });//    console.log('包含 code-widget-light 这个class');//   } else {//    console.log('包含 code-widget-dark 这个class');//   }//  });// }]]></content>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[window.onload = function () {  // 当点击 color-toggle-btn 这个id才执行  document    .getElementById("color-toggle-btn")    .addEventListener("click", function (event) {      if (document.getElementsByClassName("code-widget-light").length > 0) {        onFind("green");      } else {        onFind("skyblue");      }    });};const onFind = (color) => {  const prompt = document.getElementsByClassName("prompt_");  const language = document.getElementsByClassName("language-bash");  for (let i of prompt) {    i.style.setProperty("color", color, "important");  }  for (let i of language) {    i.style.setProperty("color", color, "important");  }};// 更改h1~h6在暗夜模式 & 日间模式下的字体颜色const changefontColorFromh1Toh6 = () => {  const h1 = document.getElementsByTagName("h1");  const h2 = document.getElementsByTagName("h2");  const h3 = document.getElementsByTagName("h3");  const h4 = document.getElementsByTagName("h4");  const h5 = document.getElementsByTagName("h5");  const h6 = document.getElementsByTagName("h6");  if (document.getElementsByClassName("code-widget-light").length > 0) {    for (let i of h1) {      i.style.setProperty("color", "#2c2c2c", "important");    }    for (let i of h2) {      i.style.setProperty("color", "#2c2c2c", "important");    }    for (let i of h3) {      i.style.setProperty("color", "#2c2c2c", "important");    }    for (let i of h4) {      i.style.setProperty("color", "#2c2c2c", "important");    }    for (let i of h5) {      i.style.setProperty("color", "#2c2c2c", "important");    }    for (let i of h6) {      i.style.setProperty("color", "#2c2c2c", "important");    }  } else {    for (let i of h1) {      i.style.setProperty("color", "#ce5e5e", "important");    }    for (let i of h2) {      i.style.setProperty("color", "#ff9c5b", "important");    }    for (let i of h3) {      i.style.setProperty("color", "#f9c16a", "important");    }    for (let i of h4) {      i.style.setProperty("color", "#bed77c", "important");    }    for (let i of h5) {      i.style.setProperty("color", "#daeaaf", "important");    }    for (let i of h6) {      i.style.setProperty("color", "#cce6ff", "important");    }  }};]]></content>
    
  </entry>
  
  
  
</search>
